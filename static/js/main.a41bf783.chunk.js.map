{"version":3,"sources":["assets/Images/logo-behine22.png","Components/Drawer/DrawerPartial/ProfileMenu.js","Components/Drawer/DrawerPartial/NotificationDrawer/Notifications.js","Components/Drawer/DrawerPartial/NotificationDrawer/NotificationDrawer.js","Components/Drawer/Drawer.js","Pages/Dashboard/DashboardPage.js","Redux/Actions/actionTypes.js","Redux/Actions/CurrentQuestionAction.js","Partial/QNumber/QNumber.js","Components/UI/WrapperComponent/QuestionTemplate.js","Questions/SingleSelect/Shamsi/Shamsi.js","Partial/NoIdeaCheckbox/NoIdeaCheckbox.js","Questions/MultiSelect/MultiCheckbox/MultiCheckbox.js","Questions/SingleSelect/RadioCustom/RadioCustom.js","Questions/SingleSelect/EmailField/EmailField.js","Questions/SingleSelect/LandlinePhone/LandlinePhone.js","Questions/SingleSelect/MultiLineInput/MultiLineInput.js","Questions/SingleSelect/NationalCode/NationalCode.js","Questions/SingleSelect/PhoneNumber/PhoneNumber.js","Questions/SingleSelect/SimpleNumberInput/SimpleNumberInput.js","Questions/SingleSelect/Slider/Slider.js","Questions/SingleSelect/SingleDropDown/SingleDropDown.js","Questions/MultiSelect/MultiDropDown/MultiDropDown.js","Questions/MultiSelect/CascadingDropDown/CascadingDropDown.js","Questions/SingleSelect/TimePicker/TimePicker.js","Questions/MultiSelect/RankingDAD/RankingDAD.js","Questions/QuestionFilter/QuestionFilter.js","functions/handleData.js","Partial/CustomModal/CustomModal.js","Questions/EditeModal/EditeModal.js","Questions/DetermineStatus/DetermineStatus.js","Pages/CallPage/CallPage.js","Pages/SettingPage/SettingPage.js","App.js","reportWebVitals.js","Redux/Reducers/authReducer.js","fonts/assets/IRANSans.woff2","Theme/CustomTheme/Theme001.js","Theme/CustomTheme/Theme002.js","Theme/CustomTheme/Theme003.js","Theme/CustomTheme/Theme004.js","Theme/CustomTheme/Theme005.js","Theme/CustomTheme/Theme006.js","Redux/Reducers/ThemeReducer.js","Redux/Reducers/apexReducer.js","Redux/Reducers/QuestionReducer.js","Redux/Reducers/CurrentQuestionReducer.js","Redux/Reducers/ValidatorReducer.js","index.js"],"names":["useStyle","makeStyles","theme","CircleIcon","width","height","borderRadius","padding","cursor","transform","backgroundColor","palette","success","dark","opacity","StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","green","main","color","common","white","ProfileIconWraper","MenuItem","ProfileMenu","classes","React","useState","anchorEl","setAnchorEl","ClickOnSubMenuHandler","console","log","className","variant","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","ListItemIcon","fontSize","ListItemText","primary","marginTop","display","flexDirection","Notif","warning","light","margin","boxShadow","Notifications","Paper","Typography","useStyles","list","fullList","NotificationDrawer","top","left","bottom","right","state","setState","toggleDrawer","anchor","type","key","clsx","role","onKeyDown","List","map","Fragment","IconButton","Badge","badgeContent","Drawer","drawerWidth","ListItemSelected","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","position","alignItems","justifyContent","backgroundImage","mixins","nested","content","ListItem","ListItemHover","appbar","companyLogoWraperDiv","companyLogo","NavLink","textDecoration","SidebarContainer","grey","subHeader","background","SubmenuText","profileContainer","title","flexGrow","FillGap","DividerStyle","SubMenulistItemText","fontWeight","SubMenulistItemTextSelected","SubMenuStyle","MiniDrawer","history","useHistory","dispatch","useDispatch","useTheme","setOpen","HeaderMessage","setHeaderMessage","text","Icon","style","path","collapse","selected","subMenu","in","subSelected","menuItem","setmenuItem","location","pathname","handleClick","e","Id","UpdatemenuItem","slice","forEach","item","index","CssBaseline","AppBar","Toolbar","edge","noWrap","src","alt","direction","Divider","to","button","collapseItem","Collapse","timeout","unmountOnExit","component","disablePadding","SubmenuHandleClick","children","Root","flexWrap","Chart","columnChart","monoChromeChart","DashboardPage","SET_USER","SET_THEME","SUBMIT_ANSWER","NEXT_QUESTION","BACK_QUESTION","UPDATE_CURRENT_QUESTION","SET_CHANGE_CURRENT_QUESTION","CHECK_FOR_REQUIRE_VALIDATE","SET_REQUIRE_VALIDATE","submitAnswer","questionobject","actionTypes","payload","paddingTop","QNumber","Number","number","NumberWraper","QuestionContainer","maxHeight","Question","blueGrey","Text","marginBottom","Answer","paddingBottom","QuestionTemplate","year","i","unshift","toString","push","day","Calendar","selectedDay","InputWraper","Label","InputLabelWraper","TextField","Autocomplete","textAlign","Shamsi","CurrentQuestion","useStore","Date","choices","description","split","initialYear","initialMonth","initialDay","initialDate","parseInt","month","setSelectedDay","Year","setYear","Month","setMonth","Day","setDay","caption","value","onChange","updateCurrentQuestion","JSON","parse","stringify","InputHandler","shouldHighlightWeekends","locale","calendarClassName","calendarSelectedDayClassName","input","localMonth","yearHandler","options","getOptionLabel","option","renderInput","params","label","monthHandler","dayHandler","FormControlLabel","Checkbox","NoIdeaCheckbox","FormControlLabelStyle","control","CheckboxStyle","checked","columnRoot","overflow","CheckBoxColorSelected","userSelect","CheckboxTextFieldWraper","CheckedBoxNonOf","DisplayNone","NoIdeaStatus","MultiCheckbox","Checked","setChecked","formControlStyle","columnCount","gridTemplateColumns","getFormControlStyle","column","FormGroup","values","status","disabled","handleChange","FormControl","formControl","noidea","prev","updateState","multiline","TextFieldVisibility","TextFieldExist","others","target","placeholder","RadioGroupRow","RadioGroup","OtherCheckboxWraper","RadioCheckedColor","RadioCustom","initialValue","setValue","FormControlLabels","Radio","colorPrimary","colorSecondary","RadioColor","Horizontal","length","EmailField","Error","setError","helperText","validateEmail","inputProps","maxLength","error","autoFocus","email","test","String","toLowerCase","LandlinePhone","ValidateLandlineNumber","onInput","MultiLineInput","helperTextForTextField","setInput","min","max","maxRows","maxWidth","NationalCode","setInputValue","onBlur","checkCodeMeli","code","L","substr","c","s","PhoneNumber","store","validate","getState","Validate","SimpleNumberInput","decimal","Icons","SliderRoot","Rail","Track","Thumb","MarkLabel","SliderOpacity","valuetext","CustomSlider","ValueOfSlider","setValueOfSlider","initialmarks","step","icon","marks","useEffect","element","rail","track","markLabel","thumb","val","SliderChangeHandler","valueLabelFormat","filter","mark","getAriaValueText","valueLabelDisplay","SingleDropDown","ValueOfAutoComplete","setValueOfAutoComplete","ValueOfAuto","noOptionsText","MultiDropDown","reason","detail","multiple","filterSelectedOptions","CascadingDropDown","initialParent","initialChild","parentValues","childValues","Child","setChild","Parnet","setParnet","initialChildData","ChildData","setChildData","updateChildData","parentId","parentHandler","parent","childHandler","child","TimePicker","TimeArray","setHours","setMinutes","selectedDate","setSelectedDate","utils","DateFnsUtils","Grid","container","ampm","inputVariant","date","getMinutes","hour","getHours","timeString","KeyboardButtonProps","DraggAbleListIsDraggin","DraggAbleListNotDragging","withTheme","initialState","choice","items","setstate","StateIndex","CQIndex","splice","onDragEnd","result","destination","startIndex","endIndex","Array","from","removed","reorder","source","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","draggableId","isDragging","draggableStyle","draggableProps","dragHandleProps","QuestionFilter","choiceTypeId","RankingDAD","ReturnQuestionTurn","Questions","answered","checkConditionOfChoices","data","deletedChoiceId","choiceStringId","bool","intArr","lastelement","deletedChoiceIdHandler","deletedQuestionId","QuestionStringId","valuesStatus","deletedQuestionIdHandler","ReplaceCurrentQuestionInData","currentquestion","OneStepBackFromCurrentQuestion","j","IsCurrentQuestionHaveAnswerd","currentquesiton","haveAnswer","modal","Minheight","shadows","outline","Message","ButtonGroup","CustomModal","Modal","ModalStatus","ModalhandleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","ModalMessageHeader","ModalMessageDescription","Button","modalSubmitHandler","ModalCancel","QuestionWraper","CurrentTurnQuestion","blue","CurrentTurnQuestionIcon","DeletedQuestion","red","DeletedQuestionIcon","NotAnsweredQuestion","NotAnsweredQuestionIcon","AnsweredQuestion","AnsweredQuestionIcon","yellow","CurrentQuestionIcon","ModalHeader","HintWraper","CloseModalButton","EditeModal","setModalStatus","ModalSituation","setModalSituation","ClickItemId","setClickItemId","ModalMessage","setModalMessage","useSelector","currentqa","CurrentQuestionChange","Data","qa","paperRef","useRef","CurrentQuestionRef","handleClose","clickHandler","TurnedQuesiton","clickedItem","current","scrollTop","RequireValidate","actionCreators","questionList","CurrentTurnId","editeModalHandler","backupCurrentQuestion","HeaderMenu","Footer","NextButton","BackButton","SimpleCard","StartStatus","setStartStatus","backHandler","SettingPage","ThemeHandler","withRouter","customTheme","routes","exact","CallPage","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","user","Iransans","fontFamily","fontStyle","IranSansFont","theme001","createTheme","default","pink","typography","overrides","MuiCssBaseline","MuiRadio","MuiCheckbox","MuiFormControl","IranSans","theme002","theme003","cyan","theme004","theme005","purple","theme006","themeReducer","action","reRender","apexReducer","mandatory","sortOrder","other","jss","plugins","jssPreset","rtl","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","auth","apex","updateData","newresult","updateRequireValidate","createStore","applyMiddleware","thunk","ReactDOM","render","StylesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a41bf783.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-behine22.336277d9.png\";","// لوگو پروفایل در گوشه سمت چپ هدر قرار گرفته \r\n// شامل دراپ دون و لوگو\r\n\r\n// PROFILE ICON WITH FROP DOWN \r\n\r\n\r\nimport React from 'react';\r\nimport { withStyles , makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    CircleIcon: {\r\n      width: \"40px\" ,\r\n      height: \"40px\" ,\r\n      borderRadius: \"100%\" ,\r\n      padding: \"3px\" ,\r\n      cursor: \"pointer\" , \r\n      \"&:hover\": {\r\n        transform: \"scale(1.02)\" ,\r\n        backgroundColor: theme.palette.success.dark ,\r\n        opacity: \"0.9\" ,\r\n        \r\n      }\r\n\r\n    }\r\n}))\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.green.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    ProfileIconWraper: {\r\n      '&:hover': {\r\n        backgroundColor: \"red\"\r\n      }\r\n    }\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function ProfileMenu() {\r\n  const classes = useStyle();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const ClickOnSubMenuHandler = () => {\r\n    console.log(\"hey\")\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.ProfileIconWraper}>\r\n      <AccountCircleIcon\r\n        className={classes.CircleIcon}\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n       />\r\n      </div>\r\n\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem key={667} onClick={ClickOnSubMenuHandler}>\r\n          <ListItemIcon>\r\n            <PersonOutlineIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"پروفایل\" />\r\n        </StyledMenuItem>\r\n\r\n        <StyledMenuItem key={666} onClick={ClickOnSubMenuHandler}>\r\n          <ListItemIcon>\r\n            <SettingsIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"تنظیمات\" />\r\n        </StyledMenuItem>\r\n\r\n        <StyledMenuItem key={668} onClick={ClickOnSubMenuHandler}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"خروج\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","import { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: \"50px\" ,\r\n        display: \"flex\" , \r\n        flexDirection: \"column\" ,\r\n    } ,\r\n    Notif: {\r\n        backgroundColor: theme.palette.warning.light,\r\n        color: \"white\"  ,\r\n        padding: \"10px  10px\",\r\n        height: \"100px\" ,\r\n        margin: \"10px 8px\" ,\r\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px \"\r\n    }\r\n}))\r\n\r\nconst Notifications = (props) => {\r\n    const classes = useStyle();\r\n   return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.Notif}>\r\n             <Typography>\r\n                 پیام شماره یک \r\n             </Typography>\r\n            </Paper>\r\n            <Paper className={classes.Notif}>\r\n              <Typography>\r\n                پیام شماره دو\r\n              </Typography>\r\n            </Paper>\r\n        </div>\r\n   )\r\n}\r\n\r\nexport default Notifications;","\r\n// دکمه نوتیفیکیشن در هدر اصلی و منوی سایدبار نوتیفیکیشن\r\n// NOTIDICATION ICON AND SIDMENU FOR NOTIDICATION\r\n\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Notifications from './Notifications';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 250,\r\n    height: \"100%\",\r\n    backgroundColor: theme.palette.success.main\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function NotificationDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        <Notifications />\r\n        {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))} */}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['right'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n            {/* <NotificationsIcon />\r\n          <Button onClick={toggleDrawer(anchor, true)}>\r\n              <div>hello</div>\r\n          </Button> */}\r\n            <IconButton onClick={toggleDrawer(anchor, true)} aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                <Badge badgeContent={2} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                </Badge>\r\n            </IconButton>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\n//  ader and SideMenu\r\n// این قسمت تمام صفحات برنامه رو در داخل خود قرار میدهد  \r\n// صفحات برنامه از داخل این برنامه رندر میشوند\r\n\r\n\r\nimport React , {useState} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { useDispatch } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport companyLogo from '../../assets/Images/logo-behine22.png';\r\n// import companyLogo from '../../assets/Images/QBLogo.svg'\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ProfileMenu from './DrawerPartial/ProfileMenu';\r\nimport NotificationDrawer from '../Drawer/DrawerPartial/NotificationDrawer/NotificationDrawer';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: \"100vh\"\r\n  },\r\n  \r\n  ListItemSelected: {\r\n    backgroundColor: theme.palette.warning.light ,\r\n    // transform: \"scale(1.04)\" ,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {  \r\n    marginRight: 36,\r\n  },\r\n\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n\r\n  toolbar: {\r\n    position: \"relative\" ,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    backgroundImage:\" linear-gradient(120deg,  \" + `${theme.palette.green.main}` + \", #131628 )\" ,\r\n    // backgroundImage: theme.palette.green.main ,\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n\r\n  nested: {\r\n    backgroundColor: theme.palette.success.light\r\n  } ,\r\n\r\n  content: {\r\n    // flexGrow: 1 ,\r\n    width: \"100%\" ,\r\n    // position: \"relative\" , \r\n    // width: \"100%\" ,\r\n    // height: \"100%\" ,\r\n    // backgroundColor: theme.palette.success.main,\r\n    // padding: theme.spacing(3),\r\n  },\r\n  \r\n  ListItem: {\r\n    color: \"white\" ,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.warning.dark , \r\n      // transform: \"scale(1.02)\" , \r\n      color: \"white\"\r\n    },\r\n  } ,\r\n\r\n  ListItemHover: {\r\n    color: \"white\" ,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.warning.light , \r\n      // transform: \"scale(1.02)\" , \r\n      color: \"white\"\r\n    },\r\n  } ,\r\n\r\n  appbar: {\r\n    color: \"white\" ,\r\n    backgroundColor: theme.palette.green.main\r\n  } , \r\n\r\n  companyLogoWraperDiv: {\r\n    display: \"flex\" , \r\n    alignItems: \"center\" , \r\n    justifyContent: \"center\" ,\r\n    borderRadius: \"100px\" ,\r\n    marginRight: \"30px\"\r\n  } ,\r\n\r\n  companyLogo: {\r\n    width: \"70px\" , \r\n    height: \"60px\"  ,\r\n    borderRadius: \"100px\" ,\r\n  } ,\r\n\r\n  NavLink : {\r\n    textDecoration: \"none\" ,\r\n  } , \r\n\r\n  paper: {\r\n    backgroundColor: \"blue\"\r\n  }  , \r\n\r\n  SidebarContainer: {\r\n    backgroundColor: theme.palette.grey.main  ,\r\n  } , \r\n\r\n  subHeader: { \r\n    background: \"linear-gradient(90deg,\" + `${theme.palette.green.main}` +\" 0%, \" + `${theme.palette.warning.main}` +\" 35%, #000000 100%)\" ,\r\n    // backgroundColor: theme.palette.warning.main,\r\n    color: \"white\" ,\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    display: \"flex\" ,\r\n    borderRadius: \"0px 0px 50px 0px\" ,\r\n    // border: \"1px black solid\"  ,\r\n    boxShadow: \"1px 1px 4px 1px black\" ,\r\n    height: \"50px\"\r\n  } ,\r\n\r\n  SubmenuText: {\r\n    padding: \"10px 20px\" , \r\n    fontSize: \"20px\"\r\n  } ,\r\n\r\n  profileContainer: {\r\n    width: \"20px\",\r\n    marginRight: \"20px\"\r\n  }, \r\n\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  FillGap: {\r\n    backgroundColor: \"green\",\r\n    flexGrow: 1 ,\r\n  } ,\r\n  DividerStyle: {\r\n    backgroundColor: \"#676767\"\r\n  } , \r\n  SubMenulistItemText: {\r\n    fontSize: \"12px\" , \r\n    fontWeight: \"0\"\r\n  } , \r\n   \r\n  SubMenulistItemTextSelected: {\r\n    backgroundColor: theme.palette.warning.light ,\r\n    // transform: \"scale(1.04)\" ,\r\n  } ,\r\n\r\n  SubMenuStyle: {\r\n    fontSize: \"10px\" ,\r\n    position: \"relative\" , \r\n    left: \"20px\" , \r\n    marginRight: \"10px\" , \r\n    color: \"white\"\r\n  } , \r\n  \r\n  \r\n\r\n}));\r\n\r\n\r\n function MiniDrawer(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [HeaderMessage , setHeaderMessage] = useState(\"\");\r\n\r\n \r\n\r\n  // SideMenu information\r\n  // Main state define here For looping through\r\n  const [menuItem , setmenuItem] = React.useState([\r\n    {\r\n      id: 1 ,\r\n      text: \"خانه\" ,\r\n      Icon: <HomeIcon style={{ color: \"white\" }} /> , \r\n      path : \"/\" ,\r\n      // True if menu item has a submenu\r\n      collapse: false ,\r\n      // True when Click on the itemList and attatch a className to item for change backgroundColor\r\n      selected: false ,\r\n      // Content of submenu\r\n      subMenu: {\r\n        \r\n      } \r\n    },\r\n    \r\n    {\r\n      id: 2 ,\r\n      text: \"داشبورد\" ,\r\n      Icon: <DashboardIcon style={{ color: \"white\" }} /> , \r\n      path : \"/dashboard\" ,\r\n      collapse: false ,\r\n      selected: false ,\r\n      subMenu: {\r\n        \r\n      }\r\n    } ,\r\n\r\n    {\r\n      id: 3 ,\r\n      text: \"تماس\" ,\r\n      Icon: <CallIcon style={{ color: \"white\" }}/> , \r\n      path : \"/call\" ,\r\n      collapse: false ,\r\n      selected: false ,\r\n      subMenu: {\r\n        \r\n      }\r\n    } ,\r\n\r\n    {\r\n      id: 4 ,\r\n      text: \"آمار\" ,\r\n      Icon: <TrendingUpIcon style={{color: \"white\"}} /> ,\r\n      path: null ,\r\n      collapse: true ,\r\n      selected: false ,\r\n      in: false ,\r\n        subMenu: [\r\n          {\r\n            id: 101 ,\r\n            text: \"نمونه یک\" ,\r\n            subSelected: false ,\r\n            Icon : <StarBorder className={classes.SubMenuStyle} /> ,\r\n            path: \"/dashboard\"\r\n          } ,\r\n          {\r\n            id: 102 ,\r\n            text: \"نمونه دو\" ,\r\n            subSelected: false ,\r\n            Icon : <StarBorder className={classes.SubMenuStyle}/> ,\r\n            path: \"/call\"\r\n          } ,\r\n          {\r\n            id: 103 ,\r\n            text: \"نمونه سه\" ,\r\n            subSelected: false ,\r\n            Icon : <StarBorder className={classes.SubMenuStyle}/> ,\r\n            path: \"/call\"\r\n          }\r\n        ]\r\n    } , \r\n    {\r\n      id: 5 ,\r\n      text: \"تنظیمات\" ,\r\n      Icon: <SettingsIcon style={{ color: \"white\" }}/> , \r\n      path : \"/setting\" ,\r\n      collapse: false ,\r\n      selected: false ,\r\n    } ,\r\n\r\n  ])\r\n\r\n  // Look at current path and change subHeaderMessage dynamically\r\n  if (history.location.pathname === \"/dashboard\" && HeaderMessage !== \"داشبورد\") {\r\n    setHeaderMessage(\"داشبورد\")\r\n  }\r\n  else if (history.location.pathname === \"/call\" && HeaderMessage !== \"تماس ها\") {\r\n    setHeaderMessage(\"تماس ها\")\r\n  }\r\n  else if (history.location.pathname === \"/setting\" && HeaderMessage !== \"تنظیمات\") {\r\n    setHeaderMessage(\"تنظیمات\")\r\n  }\r\n  else if (history.location.pathname === \"/\" && HeaderMessage !== \"خانه\") {\r\n    setHeaderMessage(\"خانه\")\r\n  }\r\n \r\n\r\n  const handleDrawerOpen = () => {\r\n    dispatch({type:\"rerender\"})\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n    let UpdatemenuItem = menuItem.slice();\r\n    UpdatemenuItem.forEach((item , index) => {\r\n      item.in = false;\r\n    })\r\n  };\r\n\r\n\r\n  // CLICK ON MENUITEM WITH SUBMENU AND TOGGLE SUBMENU OPEN OR CLOSE\r\n  // AND ALSO LOOPING THROUTH MENUITEM STATE AND TURN SELECTED OF ITEM TRUE\r\n  // AND ALL OTHERS SELECTED ATTRIBUTE FALSE\r\n  const handleClick = ( e , Id ) => {\r\n    let UpdatemenuItem = menuItem.slice()\r\n    UpdatemenuItem.forEach((item , index) => {\r\n        item.selected = false;\r\n        if (item.collapse) {\r\n          item.subMenu.forEach((item , index) => {\r\n            item.subSelected = false\r\n          })\r\n        }\r\n      if (item.id === Id) {\r\n        item.in = !item.in \r\n        item.selected = true\r\n      }\r\n      setmenuItem([\r\n        ...UpdatemenuItem\r\n      ])\r\n    })\r\n  }\r\n\r\n  // DO THE SAME THING AS FUNCTION ABOVE BUT DO IT FOR SUBMENU ITEM\r\n  const SubmenuHandleClick = (e , Id) => {\r\n\r\n    let UpdatemenuItem = menuItem.slice()\r\n    UpdatemenuItem.forEach((item , index) => {\r\n        item.selected = false;\r\n        if (item.collapse) {\r\n          item.subMenu.forEach((item , index) => {\r\n            item.subSelected = false\r\n            if (item.id === Id) {\r\n              item.subSelected = true\r\n            }\r\n          })\r\n        }\r\n      if (item.id === Id) {\r\n        item.in = !item.in \r\n        item.selected = true\r\n      }\r\n      setmenuItem([\r\n        ...UpdatemenuItem\r\n      ])\r\n    })\r\n}\r\n\r\n\r\n\r\n  // DRAWER START HERE\r\n  return (\r\n      <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        style={{color: \"white\"}} \r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar className={classes.appbar}>\r\n          {/* HAMBURGER MENU ICON */}\r\n          <IconButton\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            \r\n            <MenuIcon style={{color: \"white\"  }} />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            شرکت بهینه کاوان کیفیت\r\n          </Typography>\r\n          <div className={classes.FillGap}></div>\r\n          <div className={classes.profileContainer} style={{ display: \"flex\" , width: \"120px\" , justifyContent: \"space-around\" }}>\r\n            {/* COMPONENT FOR NOTIFICATION ICON AND SIDDRAER NOTIFICTION */}\r\n            <NotificationDrawer />\r\n            {/* COMPONENT FOR PROFILE ICON AND SUBMENU FUNCTIONALITY FOR DROPDOWN WHEN CLICK ON ICON */}\r\n            <ProfileMenu />\r\n         </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.SidebarContainer]: true ,\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar} >\r\n          <div className={classes.companyLogoWraperDiv}>\r\n          <img src={companyLogo} alt='companylogo' className={classes.companyLogo} />\r\n          </div>\r\n          {/* ARROW BUTTON FOR CLOSING DRAWER WHEN IT IS OPEN */}\r\n          <IconButton style={{color: \"white\"}}  onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n\r\n          <List style={{padding: \"0px\"}}>\r\n          \r\n           {/* Looping through menuItem for building ListItem */}\r\n            {menuItem.map((item , index) => {\r\n              return (\r\n                <div key={item.id}>\r\n                <Divider className={classes.DividerStyle} />\r\n                { item.path ? (\r\n                    <NavLink className={classes.NavLink} to={item.path} >\r\n                    <ListItem className={clsx({\r\n                      [classes.ListItem]: true ,\r\n                      [classes.ListItemSelected]: item.selected , \r\n                      [classes.ListItemHover]: item.selected\r\n                    })} button onClick={(e) => handleClick(e , item.id)}>\r\n                        <ListItemIcon>\r\n                          {item.Icon}\r\n                        </ListItemIcon>\r\n                      <ListItemText primary={item.text} />\r\n                    {item.collapse ? (item.in ? <ExpandLess /> : <ExpandMore />) : null}\r\n                  </ListItem>\r\n                  </NavLink>\r\n                ) : (\r\n                 <div key={item.id + 200}>\r\n                    <ListItem className={classes.ListItem} button onClick={(e) => handleClick(e , item.id)}>\r\n                      <ListItemIcon>\r\n                        {item.Icon}\r\n                      </ListItemIcon>\r\n                    <ListItemText primary={item.text} />\r\n                  {item.collapse ? (item.in ? <ExpandLess /> : <ExpandMore />) : null}\r\n                </ListItem>\r\n                    \r\n                  </div>\r\n                )}\r\n                 {/* Check if menuItems have collapse for subMenu */}\r\n                {item.collapse ? \r\n                      // Looping through subMenu of menuItem for generating subMenu\r\n                      item.subMenu.map((collapseItem , index) => {\r\n\r\n                        return (\r\n                         <div key={collapseItem.id}>\r\n                          <Collapse className={classes.ListItem}  in={item.in} timeout=\"auto\" unmountOnExit>\r\n                            <Divider className={classes.DividerStyle} />\r\n                            <List component=\"div\" disablePadding>\r\n                              {collapseItem.path ? (\r\n                                <NavLink className={classes.NavLink} to={collapseItem.path}>\r\n                                  <ListItem style={{color:\"white\"}} button className={clsx({\r\n                                  [classes.nested]: true ,\r\n                                  [classes.SubMenulistItemTextSelected]: collapseItem.subSelected, \r\n                                  [classes.ListItemHover]: collapseItem.subSelected\r\n                                })} onClick={(e) => SubmenuHandleClick(e , collapseItem.id)}>\r\n                                    <ListItemIcon>\r\n                                      {collapseItem.Icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText classes={{primary:classes.SubMenulistItemText}} primary={collapseItem.text} />\r\n                                  </ListItem> \r\n                                </NavLink>\r\n                              ): null}\r\n                            </List>\r\n                          </Collapse>\r\n                         </div>\r\n                        )\r\n                      })\r\n                : null}\r\n                </div>\r\n              )\r\n            })}\r\n            <Divider className={classes.DividerStyle} />\r\n\r\n\r\n          </List>\r\n      </Drawer>\r\n        <main  className={classes.content}>\r\n            {/* THIS DIV LIE UNDER THE APPBAR (SUBHEADER) AND PREVENT CONTENT TO GO UNDER THE APPBAR  */}\r\n            <div style={{backgroundColor: \"green\" ,width: \"100%\" , height: \"64px\"}}></div>\r\n            {/* SUBHEADER FOR SHOW PAGE NAME UNDER THE MAIN HEADER */}\r\n            <nav className={classes.subHeader}>\r\n              {/* TEXT THAT SHOW IN SUBHEADER */}\r\n              <div className={classes.SubmenuText}>\r\n                {/* THIS MESSAGE DYNAMICALLY CHANGE WHEN CURRENT PATH CHANGE */}\r\n                {HeaderMessage}\r\n              </div>\r\n            </nav>\r\n            <div>\r\n            {props.children}\r\n            </div>\r\n       </main>\r\n       </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MiniDrawer;\r\n\r\n\r\n            // {/* Looping through menuItem for building ListItem */}\r\n            // {menuItem.map((item , index) => {\r\n            //   return (\r\n            //     <div>\r\n            //     <Divider key={(item.id + 200)} className={classes.DividerStyle} />\r\n            //     { item.path ? (\r\n            //         <NavLink key={(item.id + 300)} className={classes.NavLink} to={item.path} >\r\n            //         <ListItem className={clsx({\r\n            //           [classes.ListItem]: true ,\r\n            //           [classes.ListItemSelected]: item.selected , \r\n            //           [classes.ListItemHover]: item.selected\r\n            //         })} key={item.id + 400} button onClick={(e) => handleClick(e , item.id)}>\r\n            //             <ListItemIcon>\r\n            //               {item.Icon}\r\n            //             </ListItemIcon>\r\n            //           <ListItemText primary={item.text} />\r\n            //         {item.collapse ? (item.in ? <ExpandLess /> : <ExpandMore />) : null}\r\n            //       </ListItem>\r\n            //       </NavLink>\r\n            //     ) : (\r\n            //       <ListItem className={classes.ListItem} key={(item.id + 500)} button onClick={(e) => handleClick(e , item.id)}>\r\n            //           <ListItemIcon>\r\n            //             {item.Icon}\r\n            //           </ListItemIcon>\r\n            //         <ListItemText primary={item.text} />\r\n            //       {item.collapse ? (item.in ? <ExpandLess /> : <ExpandMore />) : null}\r\n            //     </ListItem>\r\n            //     )}\r\n            //   {/* Check if menuItems have collapse for subMenu */}\r\n            //     {item.collapse ? \r\n            //           // Looping through subMenu of menuItem for generating subMenu\r\n            //           item.subMenu.map((collapseItem , index) => {\r\n\r\n            //             return (\r\n            //              <div>\r\n            //               <Collapse key={collapseItem.id + 600} className={classes.ListItem}  in={item.in} timeout=\"auto\" unmountOnExit>\r\n            //                 <Divider className={classes.DividerStyle} />\r\n            //                 <List component=\"div\" disablePadding>\r\n            //                   {collapseItem.path ? (\r\n            //                     <NavLink key={(collapseItem.id + 700)} className={classes.NavLink} to={collapseItem.path}>\r\n            //                       <ListItem style={{color:\"white\"}} button className={clsx({\r\n            //                       [classes.nested]: true ,\r\n            //                       [classes.SubMenulistItemTextSelected]: collapseItem.subSelected, \r\n            //                       [classes.ListItemHover]: collapseItem.subSelected\r\n            //                     })} onClick={(e) => SubmenuHandleClick(e , collapseItem.id)}>\r\n            //                         <ListItemIcon>\r\n            //                           {collapseItem.Icon}\r\n            //                         </ListItemIcon>\r\n            //                         <ListItemText classes={{primary:classes.SubMenulistItemText}} primary={collapseItem.text} />\r\n            //                       </ListItem> \r\n            //                     </NavLink>\r\n            //                   ): (\r\n            //                     <ListItem style={{color:\"white\"}}  button className={clsx({\r\n            //                       [classes.nested]: true ,\r\n            //                       [classes.SubMenulistItemTextSelected]: collapseItem.subSelected, \r\n            //                       [classes.ListItemHover]: collapseItem.subSelected\r\n            //                     })} onClick={(e) => SubmenuHandleClick(e , collapseItem.id)}>\r\n            //                     <ListItemIcon>\r\n            //                       {collapseItem.Icon}\r\n            //                     </ListItemIcon>\r\n            //                     <ListItemText classes={{primary:classes.SubMenulistItemText}} primary={collapseItem.text} />\r\n            //                   </ListItem>\r\n            //                   )}\r\n            //                 </List>\r\n            //               </Collapse>\r\n            //              </div>\r\n            //             )\r\n            //           })\r\n            //     : null}\r\n            //     </div>\r\n            //   )\r\n            // })}\r\n            // <Divider className={classes.DividerStyle} />","import React  from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n// import SplineChart from \"./Charts/SplineChart\";\r\n\r\n// import NoIdeaCheckbox from \"../../Partial/NoIdeaCheckbox/NoIdeaCheckbox\";\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    Root: {\r\n        width: \"100%\" , \r\n        display: \"flex\" , \r\n        flexDirection: \"column\" , \r\n        flexWrap: \"wrap\" \r\n    } , \r\n\r\n    Chart: {\r\n        backgroundColor: \"white\" , \r\n        boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px \" , \r\n        borderRadius: \"10px\" , \r\n        margin: \"10px\" \r\n    } ,\r\n\r\n    columnChart: {\r\n        // maxWidth: columnChartMaxWidth ,\r\n        height: \"300px\"\r\n    } ,\r\n\r\n    monoChromeChart: {\r\n        height: \"300px\"\r\n    }\r\n}))\r\n    // console.log(\"Here\")\r\nconst DashboardPage = (props) => {\r\n\r\n    const classes = useStyle();\r\n    return (\r\n            <div>\r\n                <div className={classes.Chart}>\r\n                    {/* <SplineChart /> */}\r\n\r\n                    {/* <PopularAreaChart /> */}\r\n                </div>\r\n                {/* <div style={{display: \"flex\"}}>\r\n                    <div className={clsx(classes.Chart , classes.columnChart)}>\r\n\r\n                    <ColumnChart />\r\n                    </div >\r\n                    <div className={clsx(classes.Chart , classes.monoChromeChart)}>\r\n\r\n                    <MonoChromeChart />\r\n                    </div >\r\n                </div> */}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage;","// IMPORT TO AUTHREDUCER\r\nexport const SET_USER = \"SET_USER\";\r\n\r\n\r\n// IMPORT TO THEMEREDUCER\r\nexport const SET_THEME = \"SET_THEME\";\r\n\r\n\r\n// Use in QuestionReducer \r\n// آبجکت سوال جاری را در دیتا کلی پیدا میکند و سوال جاری آپدیت شده را جایگزین جایگزین قبلی میکند\r\nexport const SUBMIT_ANSWER = \"SUBMIT_ANSWER\";\r\n\r\n\r\n// Use in CurrentQuestionReducer\r\n// سوال بعدی را در دیتا کلی پیدا میکند و سوال جاری را مطابقا آپدیت میکند\r\n// سوال بعدی منظور سوالی است که نوبت پرسیدنش است\r\nexport const NEXT_QUESTION = \"NEXT_QUESTION\";\r\n// رفتن به سوال قبلی با توجه به اینکه کدام سوال حذف شده\r\nexport const BACK_QUESTION = \"BACK_QUESTION\";\r\n\r\nexport const UPDATE_CURRENT_QUESTION = \"UPDATE_CURRENT_QUESTION\";\r\nexport const SET_CHANGE_CURRENT_QUESTION = \"SET_CHANGE_CURRENT_QUESTION\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const CHECK_FOR_REQUIRE_VALIDATE = \"CHECK_FOR_REQUIRE_VALIDATE\";\r\nexport const SET_REQUIRE_VALIDATE = \"SET_REQUIRE_VALIDATE\";\r\n\r\n","\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\n\r\nexport const submitAnswer = (questionobject) => {\r\n    return {\r\n        type: actionTypes.SUBMIT_ANSWER , \r\n        payload: questionobject\r\n    }\r\n}\r\n// export const submitAnswer = (questionobject) => {\r\n//     return {\r\n//         type: actionTypes.SUBMIT_ANSWER , \r\n//         payload: questionobject\r\n//     }\r\n// }\r\n\r\n","\r\nimport React from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n        backgroundColor: theme.palette.success.main,\r\n        color: 'white' ,\r\n        display: 'flex' , \r\n        justifyContent: 'center' , \r\n        alignItems: 'center' , \r\n        width: '30px' , \r\n        height: '30px' ,\r\n        borderRadius: '100%' , \r\n        paddingTop: '3px' , \r\n        boxShadow: 'rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset'\r\n    } ,\r\n\r\n}))\r\n\r\n\r\n\r\nconst QNumber = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.Root}>\r\n            <Typography className={classes.Number}>\r\n                {props.number}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QNumber;","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport QNumber from '../../../Partial/QNumber/QNumber';\r\nimport { Typography } from '@material-ui/core';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\n\r\nconst Height = 600\r\nconst useStyles = makeStyles((theme) => ({\r\n   \r\n\r\n    NumberWraper: {\r\n        marginRight: '10px' , \r\n        display: \"flex\" , \r\n        alignItems: \"flex-start\" , \r\n        justifyContent: \"flex-end\"\r\n    } ,\r\n\r\n    QuestionContainer: {\r\n        width: \"100%\" ,\r\n        maxHeight: Height  , \r\n        border: \"1px solid black\" , \r\n        borderRadius: \"10px 10px 10px 10px\" \r\n    } ,\r\n\r\n    Question: {\r\n        display: 'flex' ,   \r\n        alignItems: \"center\"  , \r\n        backgroundColor: blueGrey[900] ,\r\n        color : \"white\"  ,\r\n        borderRadius: \"10px 10px 0px 0px\" , \r\n        padding: \"0px 10px\"\r\n    } ,\r\n\r\n    Text: {\r\n        color: \"white\" ,\r\n        marginBottom: '20px' , \r\n        position: \"relative\" , \r\n        top: \"10px\" , \r\n    } , \r\n    Answer: {\r\n        backgroundColor: blueGrey[50],\r\n        padding: \"10px 20px\" ,\r\n        paddingBottom: \"30px\" ,\r\n        width: \"100%\" ,\r\n        borderRadius: \"10px 10px 10px 10px\" \r\n    }\r\n}));\r\n\r\nexport default function QuestionTemplate(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n        <div className={classes.QuestionContainer}>\r\n            <div className={classes.Question}>\r\n                <div className={classes.NumberWraper}>\r\n                        <QNumber number={props.number} />\r\n                </div>\r\n                <Typography className={classes.Text}>\r\n                    {props.text}\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.Answer}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n","import \"./Shamsi.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useStore } from 'react-redux';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport { Calendar } from \"react-modern-calendar-datepicker\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport QuestionTemplate from \"../../../Components/UI/WrapperComponent/QuestionTemplate\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nlet year = []\r\nfor (let i = 1; i < 100; i++) {\r\n  year.unshift({title: (i + 1303).toString()})\r\n}\r\nyear.push({title: ''})\r\nlet day = []\r\n\r\nfor (let i = 0; i < 32; i++) {\r\n  day.unshift({title: i.toString()})\r\n}\r\n\r\nday.push({title: \"\"})\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Root: {\r\n    display: \"flex\" , \r\n    justifyContent: \"space-around\"\r\n  } ,\r\n\r\n  Calendar: {\r\n    boxShadow: \"rgba(0, 0, 0, 0.35) 0px 5px 15px\"  ,\r\n    padding: \"0px\" , \r\n    borderRadius: \"10px\" , \r\n    backgroundColor: \"#eafeea\" ,\r\n  } , \r\n  selectedDay: {\r\n    borderRadius: '0px' , \r\n    background: \"red\" , \r\n    color: \"red\"\r\n  } , \r\n\r\n  InputWraper: {\r\n    display: \"flex\" , \r\n    flexDirection: \"column\" ,\r\n    // margin: \"50px\" ,\r\n    // backgroundColor: \"#3C4043\" , \r\n    borderRadius: \"10px\" , \r\n    color: \"white\" , \r\n    justifyContent: \"space-around\" , \r\n    width: \"40%\" , \r\n    padding: \"40px\" , \r\n    // height: \"100%\" , \r\n    height: \"380px\" , \r\n    // marginTop: \"15px\"\r\n  } , \r\n\r\n  Label: {\r\n    display: \"block\"\r\n  } , \r\n\r\n  InputLabelWraper: {\r\n    display: \"flex\" , \r\n    justifyContent: \"space-around\" , \r\n    alignItems: \"center\"\r\n  } , \r\n\r\n  TextField: {\r\n    backgroundColor: \"white\"\r\n  } , \r\n\r\n  Autocomplete: {\r\n    textAlign: \"center\" , \r\n    marginLeft: \"35px\"\r\n  }\r\n}))\r\n\r\nconst Shamsi = (props) => {\r\n  let dispatch = useDispatch();\r\n  const store = useStore();\r\n  // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  let CurrentQuestion = {...props} \r\n  const classes = useStyles();\r\n\r\n  // CurrentQuestion.choices.description.forEach(item => {\r\n  //   if (item !== \"\") {\r\n  //     var Date = item.split(\"/\");\r\n  //     console.log(Date)\r\n  //   }\r\n  // })\r\n  var Date = CurrentQuestion.choices.description !== \"\" ? CurrentQuestion.choices.description.split(\"/\") : null\r\n  let initialYear = null;\r\n  let initialMonth = null;\r\n  let initialDay = null;\r\n  let initialDate = null\r\n if (CurrentQuestion) {\r\n   if (CurrentQuestion.choices.description !== \"\") {\r\n     initialDate = {day: parseInt(Date[2]) , month: parseInt(Date[1]) , year: parseInt(Date[0])}\r\n    console.log(initialDate)\r\n    console.log(Date)\r\n  \r\n     initialYear = Date[0]\r\n     initialMonth = Date[1]\r\n     initialDay = Date[2]\r\n   }\r\n }\r\n\r\n  const [selectedDay, setSelectedDay] = useState(initialDate);\r\n\r\n  const [Year, setYear] = useState(initialYear);\r\n  const [Month, setMonth] = useState(initialMonth);\r\n  const [Day, setDay] = useState(initialDay);\r\n\r\n  const InputHandler = (e ) => {\r\n    setSelectedDay({...e});\r\n    console.log(e)\r\n    setYear(e.year.toString());\r\n    month.forEach(item => {\r\n      if (item.id === e.month) {\r\n        setMonth(item.title)\r\n      }\r\n    })\r\n    setDay(e.day.toString());\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateCurrentQuestion.choices.description = `${e.year}` + \"/\" + `${e.month}` + \"/\" + `${e.day}`;\r\n    \r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n    // dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true })\r\n  }\r\n\r\n  const yearHandler = (e , list) => {\r\n\r\n    if (list) {\r\n      let localMonth;\r\n      month.forEach(item => {\r\n        if (item.title === Month) {\r\n          localMonth = item.id\r\n        }\r\n      });\r\n      setSelectedDay({day: parseInt(Day) , month: localMonth ,year: parseInt(list.title)})\r\n      console.log(Year)\r\n      setYear(list.title)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const monthHandler = (e , list) => {\r\n    if(list) {\r\n      setMonth(list.title)\r\n      setSelectedDay({day: parseInt(Day) , month: parseInt(list.id) ,year: parseInt(Year)})\r\n    }\r\n  }\r\n\r\n\r\n  const dayHandler = (e , list) => {\r\n    if (list) {\r\n      let localMonth;\r\n      month.forEach(item => {\r\n        if (item.title === Month) {\r\n          localMonth = item.id\r\n        }\r\n      });\r\n      setDay(list.title)\r\n      setSelectedDay({day: parseInt(list.title) , month: localMonth ,year: parseInt(Year)})\r\n    }\r\n  }\r\n  console.log(CurrentQuestion)\r\n\r\n  return (\r\n    <QuestionTemplate type=\"Calendar\" number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n        <div className={classes.Root}>\r\n          <Calendar\r\n              value={selectedDay}\r\n              onChange={(e ) => InputHandler(e )}\r\n              shouldHighlightWeekends\r\n              locale=\"fa\" \r\n              calendarClassName={classes.Calendar}\r\n              // calendarSelectedDayClassName={classes.selectedDay}\r\n              calendarSelectedDayClassName={classes.selectedDay}\r\n            />\r\n            <div className={classes.InputWraper}>\r\n              <div className={classes.InputLabelWraper}>\r\n                <Autocomplete\r\n                  classes={{\r\n                    input: classes.Autocomplete\r\n                  }}\r\n                  onChange={(e , list) => yearHandler(e , list)}\r\n                  value={{title: Year}}\r\n                  options={year}\r\n                  getOptionLabel={(option) => {\r\n                    return option.title\r\n                  }}\r\n                  style={{ width: 300 }}\r\n                  renderInput={(params) => <TextField  value={Year} className={classes.TextField} {...params} label=\"سال شمسی\" variant=\"outlined\" />}\r\n                />\r\n              </div>\r\n              <div className={classes.InputLabelWraper}>\r\n                <Autocomplete\r\n                  classes={{\r\n                    input: classes.Autocomplete\r\n                  }}\r\n                  onChange={(e , list) => monthHandler(e , list)}\r\n                  value={{id:5  ,title: Month}}\r\n                  options={month}\r\n                  getOptionLabel={(option) => option.title}\r\n                  style={{ width: 300 }}\r\n                  renderInput={(params) => <TextField className={classes.TextField} {...params} label=\"ماه\" variant=\"outlined\" />}\r\n                />\r\n              </div>\r\n              <div className={classes.InputLabelWraper}>\r\n                <Autocomplete\r\n                  classes={{\r\n                    input: classes.Autocomplete\r\n                  }}\r\n                  onChange={(e , list) => dayHandler(e , list)}\r\n                  value={{title: Day}}\r\n                  options={day}\r\n                  getOptionLabel={(option) => option.title}\r\n                  style={{ width: 300 }}\r\n                  renderInput={(params) => <TextField className={classes.TextField} {...params} label=\"روز\" variant=\"outlined\" />}\r\n                />\r\n              </div>\r\n              \r\n            </div>\r\n        </div>\r\n    </QuestionTemplate>\r\n  );\r\n};\r\n\r\nexport default Shamsi;\r\n\r\n\r\n\r\nconst month = [\r\n\r\n  { id: 1 , title: \"فروردین\" } ,\r\n  { id: 2 , title: \"اردیبهشت\" } ,\r\n  { id: 3 , title: \"خرداد\" } ,\r\n  { id: 4 , title: \"تیر\" } ,\r\n  { id: 5 , title: \"مرداد\" } ,\r\n  { id: 6 , title: \"شهریور\" } ,\r\n  { id: 7 , title: \"مهر\" } ,\r\n  { id: 8 , title: \"آبان\" } ,\r\n  { id: 9 , title: \"آذر\" } ,\r\n  { id: 10 , title: \"دی\" } ,\r\n  { id: 11 , title: \"بهمن\" } ,\r\n  { id: 12 , title: \"اسفند\" } ,\r\n  { id: 0 , title: \"\" } ,\r\n];","\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { FormControlLabel } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { blueGrey } from '@material-ui/core/colors';\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    FormControlLabel: {\r\n        padding: \"8px 5px\" , \r\n        borderRadius: \"10px\" , \r\n        backgroundColor: blueGrey[200] , \r\n        marginBottom: \"23px\"\r\n    } ,\r\n\r\n    Checkbox: {\r\n    }\r\n}))\r\n\r\n\r\nconst NoIdeaCheckbox = (props) => {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return (\r\n        <FormControlLabel\r\n            style={{...props.FormControlLabelStyle}}\r\n            color=\"primary\"\r\n            className={clsx({\r\n                [classes.FormControlLabel]: true ,\r\n                [props.className]: true\r\n            })}\r\n            label={props.label ? props.label : \"نظری ندارم\"}\r\n            control={<Checkbox \r\n                        style={{...props.CheckboxStyle}}\r\n                        className={classes.Checkbox} \r\n                        checked={props.checked} \r\n                        onChange={props.onChange} />}\r\n            />\r\n    )\r\n}\r\n\r\nexport default NoIdeaCheckbox;","import React , {useState }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport \"./MultiCheckbox.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport clsx from 'clsx';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport { TextField } from '@material-ui/core';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\n\r\n\r\n\r\nconst Height = 400\r\nconst useStyles = makeStyles((theme) => ({\r\n  columnRoot: {\r\n      overflow: \"auto\" , \r\n      // overflowX: \"hidden\" ,\r\n      maxHeight: Height\r\n  },\r\n\r\n  CheckBoxColorSelected: {\r\n    backgroundColor: theme.palette.grey.dark ,\r\n  } ,\r\n\r\n  FormControlLabel: {\r\n      userSelect: \"none\" ,\r\n      border: \"1px black solid\" ,\r\n      borderRadius: \"10px\" ,\r\n      padding: \" 5px 10px\" ,\r\n      margin: \"10px\" ,\r\n      \"&:hover\" : {\r\n        transform: \"scale(1.02)\"\r\n      }\r\n  } ,\r\n\r\n  CheckboxTextFieldWraper: {\r\n    display: \"flex\" , \r\n    justifyContent: \"flex-start\" , \r\n    marginRight: \"30px\" , \r\n    alignItems: \"flex-start\"\r\n  } ,\r\n\r\n  TextField: {\r\n    width: \"100%\" , \r\n    marginTop: \"20px\" , \r\n    position: \"relative\" , \r\n    bottom: \"10px\"\r\n  } ,\r\n\r\n  CheckedBoxNonOf: {\r\n    display: \"none\"\r\n  } ,\r\n\r\n  NoIdeaCheckbox: {\r\n    marginTop: \"10px\"\r\n  } ,\r\n\r\n  DisplayNone: {\r\n    display: \"none\"\r\n  } ,\r\n\r\n  NoIdeaStatus: {\r\n  display: \"none\"\r\n}\r\n}));\r\n\r\n\r\n\r\nexport default function MultiCheckbox(props) {\r\n  const classes = useStyles();\r\n  let dispatch = useDispatch();\r\n  const [Checked, setChecked] = useState(false)\r\n  \r\n    // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n    let CurrentQuestion = {...props} \r\n  // let {Validate} = useSelector(state => state.validate);\r\n  \r\n\r\n\r\n  \r\n \r\n\r\n  const handleChange = (e, key) => {\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateCurrentQuestion.choices.values.forEach(item => {\r\n      if (item.id === key) {\r\n        item.status = !item.status\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n      } \r\n    });\r\n\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n\r\n  }\r\n\r\n\r\n  const textFieldHandler = (e) => {\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateCurrentQuestion.choices.description = e.target.value;\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n\r\n  }\r\n\r\n  const getFormControlStyle = (columnCount) => {\r\n\r\n    switch (columnCount) {\r\n      case 1: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto\"\r\n      }\r\n      case 2: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto auto\"\r\n      }\r\n      case 3: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto auto auto\"\r\n        \r\n      }\r\n      case 4: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto auto auto auto\"\r\n      }\r\n      default: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto\"\r\n      }\r\n  }\r\n}\r\n\r\nconst formControlStyle = getFormControlStyle(CurrentQuestion.choices.column);\r\n\r\n\r\n let FormGroup = [];\r\n\r\n CurrentQuestion.choices.values.forEach(item => {\r\n    FormGroup.push(\r\n      <FormControlLabel\r\n      key={item.id}\r\n      className={clsx({\r\n                [classes.FormControlLabel]: true , \r\n                [classes.CheckBoxColorSelected] : item.status , \r\n                [classes.DisplayNone]: !item.display\r\n      })}\r\n      control={<Checkbox \r\n                className={clsx({\r\n                  [classes.DisplayNone]: !item.display\r\n                })}\r\n                disabled={Checked} \r\n                key={item.id} \r\n                checked={item.status} \r\n                onChange={(e) => handleChange(e , item.id)} />}\r\n                label={item.caption}\r\n    />\r\n     )\r\n })\r\n\r\n\r\n const checkboxChangeHandler = () => {\r\n  setChecked(prev => !prev);\r\n  let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n  updateState.noidea.status = !Checked\r\n  updateState.choices.values.forEach(item => {\r\n        item.status = false\r\n  })\r\n  dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n  dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateState })\r\n}\r\n\r\n\r\n  return (\r\n    <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n        <div className={classes.columnRoot}>\r\n          <FormControl  style={formControlStyle} component=\"fieldset\" className={classes.formControl}>\r\n          {FormGroup}\r\n          </FormControl>\r\n        </div>\r\n        <div className={classes.CheckboxTextFieldWraper}>\r\n          <NoIdeaCheckbox\r\n              label=\"هیچکدام\"\r\n              className={clsx({\r\n                        [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                        [classes.NoIdeaCheckbox]: true\r\n              })}\r\n              checked={Checked}\r\n              onChange={checkboxChangeHandler}\r\n              />\r\n          <TextField \r\n              multiline={true}\r\n              className={clsx({\r\n                        [classes.TextField]: true , \r\n                        [classes.TextFieldVisibility]: true , \r\n                        [classes.TextFieldExist]: !CurrentQuestion.choices.others\r\n              })}\r\n              onChange={textFieldHandler}\r\n              value={CurrentQuestion.choices.description}\r\n              color=\"secondary\" \r\n              variant=\"outlined\" \r\n              placeholder=\"سایر موارد\"\r\n              disabled={false}\r\n              />\r\n      </div>\r\n    </QuestionTemplate>\r\n  );\r\n}\r\n","import React , {useState} from 'react';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\n\r\nconst Height = 400\r\nconst useStyles = makeStyles(theme => ({\r\n  RadioGroupRow: {\r\n    display: \"flex\" , \r\n    flexWrap: \"wrap\" , \r\n    flexDirection: \"row\" , \r\n  } ,\r\n  RadioGroup: {\r\n    display: \"grid\" , \r\n    gridTemplateColumns: \"auto auto\"\r\n  } ,\r\n\r\n  FormControl: {\r\n    overflow: \"auto\" ,\r\n    maxHeight: Height\r\n  } ,\r\n\r\n  FormControlLabel: {\r\n      border: \"1px grey solid\"  ,\r\n      borderRadius: \"10px\" ,\r\n      margin: \"10px 10px\" , \r\n      padding: \"0px 10px\" , \r\n      \"&:hover\": {\r\n        transform: \"scale(1.02)\"\r\n      }\r\n    } ,\r\n\r\n    OtherCheckboxWraper: {\r\n      display: \"flex\" , \r\n      justifyContent: \"flex-start\" , \r\n      marginLeft: \"30px\" , \r\n      alignItems: \"flex-start\"\r\n    } ,\r\n\r\n  TextField: {\r\n    width: \"100%\" , \r\n    marginTop: \"20px\" , \r\n    position: \"relative\" , \r\n    bottom: \"10px\"\r\n  } ,\r\n\r\n    RadioCheckedColor: {\r\n      backgroundColor: theme.palette.grey.dark ,\r\n      transform: \"scale(1.02)\"\r\n    } , \r\n \r\n\r\n    NoIdeaCheckbox: {\r\n      marginTop: \"10px\"\r\n    } ,\r\n\r\n    NoIdeaStatus: {\r\n    display: \"none\"\r\n}\r\n}))\r\n\r\nexport default function RadioCustom(props) {\r\n  // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  let CurrentQuestion = {...props} \r\n  \r\n  let initialValue = null;\r\n  CurrentQuestion.choices.values.forEach(item => {\r\n    if(item.status === true) {\r\n      initialValue = item.id\r\n    }\r\n  })\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(initialValue);\r\n  const [Checked, setChecked] = useState(false);\r\n  let dispatch = useDispatch();\r\n\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setValue(parseInt(event.target.value));\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateCurrentQuestion.choices.values.forEach(item => {\r\n      if (item.id === parseInt(event.target.value)) {\r\n        item.status = true\r\n      } else {\r\n        item.status = false\r\n      }\r\n    });\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n  };\r\n\r\n\r\n  const textFieldHandler = (e) => {\r\n    if ( e.target.value.toString().length > 0) {\r\n      setValue(\"\");\r\n      setChecked(true)\r\n\r\n\r\n      let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n      updateCurrentQuestion.choices.description = e.target.value;\r\n      updateCurrentQuestion.noidea.status = true;\r\n      updateCurrentQuestion.choices.values.forEach(item => {\r\n        item.status = false\r\n        })\r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n      dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n\r\n\r\n\r\n    } else {\r\n      setChecked(false)\r\n\r\n      let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n      updateCurrentQuestion.choices.description = e.target.value;\r\n      updateCurrentQuestion.noidea.status = false;\r\n      updateCurrentQuestion.choices.values.forEach(item => {\r\n        item.status = false\r\n        })\r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n      dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  \r\n  let FormControlLabels = [];\r\n  CurrentQuestion.choices.values.forEach(item => {\r\n    FormControlLabels.push(\r\n        <FormControlLabel\r\n          label={item.caption}\r\n          key={item.id}\r\n          className={clsx({\r\n            [classes.FormControlLabel]: true ,\r\n            [classes.RadioCheckedColor]: value === item.caption\r\n            \r\n          })} \r\n          value={item.id} \r\n          control={<Radio\r\n                  disabled={CurrentQuestion.noidea.status}\r\n                  classes={{colorPrimary: classes.Radio ,\r\n                            colorSecondary: classes.RadioColor ,\r\n                            checked: classes.Radio}} \r\n                />}  />\r\n    )\r\n  })\r\n\r\n\r\n  const getFormControlStyle = (columnCount) => {\r\n\r\n    switch (columnCount) {\r\n      case 1: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto\"\r\n      }\r\n      case 2: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto auto\"\r\n      }\r\n      case 3: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto auto auto\"\r\n        \r\n      }\r\n      case 4: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto auto auto auto\"\r\n      }\r\n      default: return {\r\n        display: \"grid\" , \r\n        gridTemplateColumns: \"auto\"\r\n      }\r\n  }\r\n}\r\n\r\nconst formControlStyle = getFormControlStyle(props.choices.column);\r\n\r\n\r\n  const checkboxChangeHandler = () => {\r\n    setChecked(prev => !prev);\r\n    setValue(\"\");\r\n    let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateState.noidea.status = !Checked\r\n    updateState.choices.values.forEach(item => {\r\n          item.status = false\r\n    })\r\n    updateState.choices.description = \"\";\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateState })\r\n}\r\n\r\n\r\n  return (\r\n\r\n      <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n        <div style={{margin: \"auto\" }}>\r\n          <FormControl className={classes.FormControl} >\r\n            <RadioGroup\r\n              style={formControlStyle}\r\n              className={clsx({\r\n                        [classes.RadioGroupRow]: props.choices.Horizontal,\r\n                        [classes.RadioGroup]: true\r\n                        })} \r\n                        value={value} onChange={handleChange}>\r\n                        {FormControlLabels}\r\n            </RadioGroup>                  \r\n          </FormControl>\r\n          <div className={classes.OtherCheckboxWraper}>\r\n            <NoIdeaCheckbox\r\n              label=\"هیچکدام\"\r\n              className={clsx({\r\n                  [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                  [classes.NoIdeaCheckbox]: true\r\n              })}\r\n              checked={CurrentQuestion.noidea.status}\r\n              onChange={checkboxChangeHandler}\r\n              />\r\n\r\n            <TextField \r\n                onChange={ textFieldHandler }\r\n                value={CurrentQuestion.choices.description}\r\n                multiline={true}\r\n                className={clsx({\r\n                  [classes.TextField]: true , \r\n                })}\r\n                color=\"secondary\" \r\n                variant=\"outlined\" \r\n                label=\"سایر موارد\"  \r\n                />\r\n          </div>\r\n        </div>\r\n      </QuestionTemplate>\r\n\r\n   \r\n  );\r\n}\r\n","import React , {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport { makeStyles , TextField } from '@material-ui/core';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n    display: \"flex\" , \r\n    justifyContent: \"center\" , \r\n    alignItems: \"center\" , \r\n    marginRight: \"30px\" ,\r\n} ,\r\n\r\n    TextField: {\r\n    width: \"400px\" , \r\n    padding: \"20px\"\r\n} , \r\n    NoIdeaStatus: {\r\n        display: \"none\"\r\n    }\r\n\r\n}))\r\n\r\n\r\nconst EmailField = (props) => {\r\n    let dispatch = useDispatch();\r\n    let CurrentQuestion = {...props} \r\n\r\n    const classes = useStyles();\r\n    const [Error, setError] = useState(false)\r\n    const [, setChecked] = useState(false)\r\n\r\n    let helperTextForTextField = \"فرمت ایمیل\";\r\n\r\n\r\n    const InputHandler = (e) => {\r\n        setError(!validateEmail(e.target.value));\r\n        let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateCurrentQuestion.choices.description = e.target.value;\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: validateEmail(e.target.value) })\r\n    }\r\n\r\n\r\n    const checkboxChangeHandler = () => {\r\n        setChecked(prev => !prev)\r\n    let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateState.choices.description = \"\";\r\n    updateState.noidea.status = !updateState.noidea.status\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n    dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n    }\r\n\r\n    return (\r\n            <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n            <div className={classes.Root}>\r\n               <TextField\r\n                    helperText={helperTextForTextField}\r\n                    value={CurrentQuestion.choices.description}\r\n                    disabled={CurrentQuestion.noidea.status}\r\n                    placeholder=\"example@gmail.com\"\r\n                    className={classes.TextField}\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    onChange={InputHandler}\r\n                    inputProps={{ maxLength: 40 }}\r\n                    error={Error}\r\n                    autoFocus\r\n                    />\r\n                <NoIdeaCheckbox\r\n              className={clsx({\r\n                  [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                  [classes.NoIdeaCheckbox]: true\r\n              })}\r\n                    checked={CurrentQuestion.noidea.status}\r\n                    onChange={checkboxChangeHandler}\r\n                    />\r\n            </div>\r\n        </QuestionTemplate>\r\n    )\r\n}\r\n\r\nexport default EmailField;\r\n\r\n\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n","import React , { useState } from 'react';\r\nimport { makeStyles, TextField } from '@material-ui/core';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport clsx from 'clsx';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n        display: \"flex\" , \r\n        justifyContent: \"center\" , \r\n        alignItems: \"center\" , \r\n        marginRight: \"30px\" ,\r\n} ,\r\n\r\n    TextField: {\r\n        width: \"400px\" , \r\n        padding: \"20px\"\r\n} ,\r\n\r\n    NoIdeaStatus: {\r\n        display: \"none\"\r\n    }\r\n}))\r\n\r\n\r\nconst LandlinePhone = (props) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [Error, setError] = useState(false);\r\n    const [, setChecked] = useState(false);\r\n    let helperTextForTextField = \"فرمت شماره تلفن ثابت\";\r\n    let CurrentQuestion = {...props} \r\n\r\n    const InputHanlder = (e) => {\r\n        if (!ValidateLandlineNumber(e.target.value)) {\r\n            setError(true)\r\n        }else {\r\n            setError(false)\r\n        }\r\n        \r\n        let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateCurrentQuestion.choices.description = e.target.value;\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: ValidateLandlineNumber(e.target.value) })\r\n\r\n    }\r\n\r\n    const checkboxChangeHandler = () => {\r\n        setChecked(prev => !prev)\r\n        let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateState.choices.description = \"\";\r\n        updateState.noidea.status = !updateState.noidea.status\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n    }\r\n\r\n\r\n    return (\r\n           <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n                <div className={classes.Root}>\r\n                <TextField\r\n                    helperText={helperTextForTextField}\r\n                    type=\"number\"\r\n                    value={CurrentQuestion.choices.description}\r\n                    disabled={CurrentQuestion.noidea.status}\r\n                    className={classes.TextField}\r\n                    error={Error}\r\n                    onChange={InputHanlder}\r\n                    onInput={(e) => {\r\n                        e.target.value = e.target.value.toString().slice(0,12)\r\n                    }}\r\n                    placeholder=\"شماره تلفن ثابت\"\r\n                    variant=\"outlined\" \r\n                      />\r\n\r\n                <NoIdeaCheckbox\r\n                    className={clsx({\r\n                        [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                        [classes.NoIdeaCheckbox]: true\r\n                    })}\r\n                    checked={CurrentQuestion.noidea.status}\r\n                    onChange={checkboxChangeHandler}\r\n                        />\r\n                </div>\r\n           </QuestionTemplate>\r\n    )\r\n}\r\n\r\nexport default LandlinePhone;\r\n\r\n\r\n\r\nfunction ValidateLandlineNumber(number) {\r\n    const re = /^0\\d{2,3}\\d{8}$/;\r\n    return re.test(String(number).toLowerCase());\r\n}\r\n\r\n","import React , { useState } from 'react';\r\nimport { makeStyles, TextField } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport clsx from 'clsx'\r\nimport \"./MultiLineInput.css\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    NoIdeaCheckbox: {\r\n        marginBottom: \"10px\" , \r\n        marginLeft: \"0px\"\r\n    }\r\n\r\n\r\n}))\r\n\r\n\r\nconst MultiLineInput = (props) => {\r\n    const dispatch = useDispatch();\r\n    let CurrentQuestion = {...props} \r\n    const classes = useStyles();\r\n    const [, setInput] = useState('')\r\n    const [Error,setError ] = useState(false)\r\n    let helperTextForTextField;\r\n    if (CurrentQuestion.choices.min && CurrentQuestion.choices.max) {\r\n        helperTextForTextField =  \" تعداد کاراکتر بین \" + `${CurrentQuestion.choices.min}` + \" تا \" + `${CurrentQuestion.choices.max}`\r\n    }\r\n    const InputHanlder = (e) => {\r\n        setInput(e.target.value)\r\n        setError(true)\r\n        let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateCurrentQuestion.choices.description = e.target.value;\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n        if (e.target.value.length > CurrentQuestion.choices.min) {\r\n            dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true })\r\n        }else {\r\n            setError(false)\r\n            dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: false })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const checkboxChangeHandler = () => {\r\n    let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateState.choices.description = \"\";\r\n    updateState.noidea.status = !updateState.noidea.status\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n    dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.Root}>\r\n           <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n                <NoIdeaCheckbox\r\n                    className={clsx({\r\n                        [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                        [classes.NoIdeaCheckbox]: true\r\n                    })}\r\n                            checked={CurrentQuestion.noidea.status}\r\n                            onChange={checkboxChangeHandler}\r\n                            />\r\n                <div>\r\n                    <TextField\r\n                        id=\"hello\"\r\n                        disabled={CurrentQuestion.noidea.status}\r\n                        value={CurrentQuestion.choices.description}\r\n                        multiline={true}\r\n                        maxRows={2}\r\n                        className={classes.TextField}\r\n                        error={Error}\r\n                        // value={Input}\r\n                        onChange={InputHanlder}\r\n                        onInput={(e) => {\r\n                            e.target.value = e.target.value.toString().slice(0, CurrentQuestion.choices.max)\r\n                        }}\r\n                        placeholder=\"توضیحات\"\r\n                        variant=\"outlined\" \r\n                        autoFocus \r\n                        helperText={helperTextForTextField}\r\n                        error={!Error}\r\n                        />\r\n                </div>\r\n           </QuestionTemplate>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MultiLineInput;","import React , { useState } from 'react';\r\nimport { makeStyles, TextField } from '@material-ui/core';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport { useStore } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport clsx from 'clsx';\r\n\r\nconst MaxWidth = 400\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n        display: \"flex\" , \r\n        justifyContent: \"center\" , \r\n        alignItems: \"center\" , \r\n        marginRight: \"30px\" ,\r\n} ,\r\n    TextField: {\r\n        padding: \"20px\" , \r\n        maxWidth: MaxWidth , \r\n    }  ,\r\n\r\n    NoIdeaStatus: {\r\n        display: \"none\"\r\n    }\r\n}))\r\n\r\n\r\nconst NationalCode = (props) => {\r\n    const dispatch = useDispatch();\r\n    const store = useStore();\r\n    let CurrentQuestion = {...props} \r\n    const classes = useStyles();\r\n    const [Error, setError] = useState(false)\r\n    const [, setChecked] = useState(false)\r\n    const [, setInputValue] = useState(\"\")\r\n    let helperTextForTextField = \"فرمت کد ملی ایران\";\r\n\r\n    const InputHanlder = (e) => {\r\n        setInputValue(e.target.value)\r\n        if (!checkCodeMeli(e.target.value.toString())) {\r\n            setError(true)\r\n        } else {\r\n            setError(false)\r\n        }\r\n\r\n        let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateCurrentQuestion.choices.description = e.target.value;\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: checkCodeMeli(e.target.value.toString()) })\r\n    }\r\n\r\n    const checkboxChangeHandler = () => {\r\n        setChecked(prev => !prev)\r\n        let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateState.choices.description = \"\";\r\n        updateState.noidea.status = !updateState.noidea.status\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n           <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n                <div className={classes.Root}>\r\n                    <TextField\r\n                            helperText={helperTextForTextField}\r\n                            value={CurrentQuestion.choices.description}\r\n                            disabled={CurrentQuestion.noidea.status}\r\n                            onBlur={() => {\r\n                                setError(false)\r\n                            }}\r\n                            className={classes.TextField}\r\n                            error={Error}\r\n                            onChange={InputHanlder}\r\n                            type='number'\r\n                            onInput={(e) => {\r\n                                e.target.value = e.target.value.toString().slice(0,12)\r\n                                \r\n                            }}\r\n                            placeholder=\"کد ملی\"\r\n                            variant=\"outlined\" \r\n                            autoFocus  />\r\n                        <NoIdeaCheckbox\r\n                            className={clsx({\r\n                                [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                                [classes.NoIdeaCheckbox]: true\r\n                            })}\r\n                            checked={CurrentQuestion.noidea.status}\r\n                            onChange={checkboxChangeHandler}\r\n                        />\r\n            </div>\r\n           </QuestionTemplate>\r\n    )\r\n}\r\n\r\nexport default NationalCode;\r\n\r\nfunction checkCodeMeli(code) {\r\n    var L=code.length;\r\n    if(L<8 || parseInt(code,10)===0) return false;\r\n    code=('0000'+code).substr(L+4-10);\r\n    if(parseInt(code.substr(3,6),10)===0) return false;\r\n    var c=parseInt(code.substr(9,1),10);\r\n    var s=0;\r\n    for(var i=0;i<9;i++)\r\n    s+=parseInt(code.substr(i,1),10)*(10-i);\r\n    s=s%11;\r\n    return (s<2 && c===s) || (s>=2 && c===(11-s));\r\n   \r\n}","import React , { useState } from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport { makeStyles, TextField } from '@material-ui/core';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst MaxWidth = 400\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n    display: \"flex\" , \r\n    justifyContent: \"center\" , \r\n    alignItems: \"center\" , \r\n    marginRight: \"30px\" ,\r\n} ,\r\n    TextField: {\r\n        padding: \"20px\" , \r\n        maxWidth: MaxWidth\r\n    } ,\r\n    NoIdeaStatus: {\r\n        display: \"none\"\r\n    }\r\n}))\r\n\r\n\r\nconst PhoneNumber = (props) => {\r\n    let dispatch = useDispatch();\r\n    const store = useStore();\r\n    // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n    let CurrentQuestion = {...props} \r\n    const classes = useStyles();\r\n    const [InputValue, setInputValue] = useState('')\r\n    const [Error, setError] = useState(false)\r\n    const [Checked, setChecked] = useState(false)\r\n    let helperTextForTextField = \"فرمت شماره تلفن همراه\";\r\n\r\n\r\n    const InputHanlder = (e) => {\r\n        let validate = false;\r\n        setInputValue(e.target.value)\r\n        if (e.target.value.toString().length < 11) {\r\n            setError(true)\r\n            validate = false;\r\n        } else if (e.target.value.toString()[0] + e.target.value.toString()[1] !== \"09\") {\r\n            setError(true)\r\n            validate = false;\r\n        } else if (e.target.value.toString().length === 11) {\r\n            setError(false)\r\n        }else {\r\n            validate = true;\r\n            setError(false)\r\n        }\r\n        let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateCurrentQuestion.choices.description = e.target.value;\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: validate })\r\n    }\r\n       \r\n    const checkboxChangeHandler = () => {\r\n        setChecked(prev => !prev)\r\n        let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateState.choices.description = \"\";\r\n        updateState.noidea.status = !updateState.noidea.status\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n        let {Validate} = store.getState().validate\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n    }\r\n\r\n\r\n    return (\r\n           <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n                <div className={classes.Root}>\r\n                    <TextField\r\n                            helperText={helperTextForTextField}\r\n                            value={CurrentQuestion.choices.description}\r\n                            disabled={CurrentQuestion.noidea.status}\r\n                            className={classes.TextField}\r\n                            error={Error}\r\n                            onChange={InputHanlder}\r\n                            type='tel'\r\n                            onInput={(e) => {\r\n                                e.target.value = e.target.value.toString().slice(0,11)\r\n                                \r\n                            }}\r\n                            placeholder=\"شماره تلفن همراه\"\r\n                            variant=\"outlined\" \r\n                            autoFocus  />\r\n                        <NoIdeaCheckbox\r\n                            className={clsx({\r\n                                [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                                [classes.NoIdeaCheckbox]: true\r\n                            })}\r\n                            checked={CurrentQuestion.noidea.status}\r\n                            onChange={checkboxChangeHandler}\r\n                            />\r\n                </div>\r\n           </QuestionTemplate>\r\n    )\r\n}\r\n\r\nexport default PhoneNumber;","import React , { useState } from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport { makeStyles, TextField } from '@material-ui/core';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst MaxWidth = 400\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n        display: \"flex\" , \r\n        justifyContent: \"center\" , \r\n        alignItems: \"center\" , \r\n        marginRight: \"30px\" ,\r\n} ,\r\n    TextField: {\r\n        padding: \"20px\" , \r\n        maxWidth: MaxWidth , \r\n    }  ,\r\n\r\n    NoIdeaStatus: {\r\n        display: \"none\" ,\r\n    }\r\n}))\r\n\r\n\r\nconst SimpleNumberInput = (props) => {\r\n    let dispatch = useDispatch();\r\n    const store = useStore();\r\n    // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n    let CurrentQuestion = {...props} \r\n    const classes = useStyles();\r\n    const [InputValue, setInputValue] = useState('')\r\n    const [Error, setError] = useState(false)\r\n    const [Checked, setChecked] = useState(false)\r\n    let helperTextForTextField;\r\n    if (CurrentQuestion.choices.min && CurrentQuestion.choices.max) {\r\n        helperTextForTextField =  \" تعداد کاراکتر بین \" + `${CurrentQuestion.choices.min}` + \" تا \" + `${CurrentQuestion.choices.max}`\r\n    }\r\n\r\n    const InputHanlder = (e) => {\r\n        setInputValue(e.target.value)\r\n        let validate = true;\r\n        if (props.decimal) {\r\n            if (hasDecimal(e.target.value)) {\r\n                setError(true)\r\n                validate = false\r\n            } else if (e.target.value.toString().length >= CurrentQuestion.choices.max) {\r\n                setError(true)\r\n                validate = false\r\n            } else {\r\n                setError (false)\r\n                validate = false\r\n            }\r\n        } else {\r\n            if (e.target.value.toString().length <= CurrentQuestion.choices.min) {\r\n                setError(true)\r\n                validate = false\r\n            } \r\n            else {\r\n                setError(false)\r\n                // validate = true\r\n            }\r\n        }\r\n        \r\n        setInputValue(e.target.value)\r\n        let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateCurrentQuestion.choices.description = e.target.value;\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: validate })\r\n\r\n\r\n    }\r\n\r\n    const checkboxChangeHandler = () => {\r\n        setChecked(prev => !prev)\r\n        let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n        updateState.choices.description = \"\";\r\n        updateState.noidea.status = !updateState.noidea.status\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n        let {Validate} = store.getState().validate\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n    }\r\n\r\n    return (\r\n           <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n            <div className={classes.Root}>\r\n            <TextField\r\n                helperText={helperTextForTextField}\r\n                value={CurrentQuestion.choices.description}\r\n                disabled={CurrentQuestion.noidea.status}\r\n                onBlur={() => {\r\n                    setError(false)\r\n                }}\r\n                className={classes.TextField}\r\n                error={Error}\r\n                onChange={InputHanlder}\r\n                type='number'\r\n                onInput={(e) => {\r\n                    e.target.value = e.target.value.toString().slice(0,CurrentQuestion.choices.max)\r\n                    \r\n                }}\r\n                placeholder=\"شماره\"\r\n                variant=\"outlined\" \r\n                autoFocus  />\r\n            <NoIdeaCheckbox\r\n                className={clsx({\r\n                    [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                    [classes.NoIdeaCheckbox]: true\r\n                })}\r\n                checked={CurrentQuestion.noidea.status}\r\n                onChange={checkboxChangeHandler}\r\n                />\r\n            </div>\r\n           </QuestionTemplate>\r\n    )\r\n}\r\n\r\nexport default SimpleNumberInput;\r\n\r\n\r\n\r\nfunction hasDecimal (num) {\r\n    return !!(num % 1);\r\n}","import clsx from 'clsx';\r\nimport React , {useState , useEffect} from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport \"./Slider.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport SentimentVeryDissatisfiedOutlinedIcon from '@material-ui/icons/SentimentVeryDissatisfiedOutlined';\r\nimport SentimentDissatisfiedOutlinedIcon from '@material-ui/icons/SentimentDissatisfiedOutlined';\r\nimport MoodBadIcon from '@material-ui/icons/MoodBad';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport InsertEmoticonOutlinedIcon from '@material-ui/icons/InsertEmoticonOutlined';\r\nimport SentimentVerySatisfiedOutlinedIcon from '@material-ui/icons/SentimentVerySatisfiedOutlined';\r\nimport NoIdeaCheckbox from '../../../Partial/NoIdeaCheckbox/NoIdeaCheckbox';\r\n\r\n\r\nconst Icons = [\r\n  <SentimentVeryDissatisfiedOutlinedIcon /> , \r\n  <MoodBadIcon /> , \r\n  <SentimentDissatisfiedOutlinedIcon /> ,\r\n  <SentimentDissatisfiedIcon /> , \r\n  <SentimentSatisfiedIcon /> ,\r\n  <InsertEmoticonOutlinedIcon /> ,\r\n  <SentimentVerySatisfiedOutlinedIcon />\r\n]\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"20px 50px\"  , \r\n\r\n    \r\n  },\r\n\r\n  SliderRoot: {\r\n    color: \"#1E5631\" , \r\n  } ,\r\n\r\n \r\n\r\n  Rail: {\r\n    height: \"30px\" ,\r\n    borderRadius: \"10px\" ,  \r\n  } , \r\n  \r\n  Track: {\r\n    background: \"linear-gradient(90deg, rgba(52,171,0,1) 13%, rgba(252,6,6,1) 100%)\" ,\r\n    height: \"30px\" , \r\n  } , \r\n\r\n  Thumb: {\r\n    borderRadius: \"5px\" ,\r\n    width: \"10px\" , \r\n    height: \"30px\" ,\r\n    position: \"relative\" , \r\n    top: \"5px\" , \r\n    color: \"black\" , \r\n  } ,\r\n\r\n  MarkLabel: {\r\n      marginTop: \"15px\" ,\r\n      padding: \"5px\"\r\n  } ,\r\n\r\n  SliderOpacity: {\r\n    opacity: \"0.3\"\r\n  } ,\r\n});\r\n\r\n\r\n\r\nfunction valuetext(value) {\r\n  return `${value}°C`;\r\n}\r\n\r\n\r\n\r\nexport default function CustomSlider(props) {\r\n  let dispatch = useDispatch();\r\n  const store = useStore();\r\n  // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  let CurrentQuestion = {...props} \r\n  const classes = useStyles();\r\n  const [Checked, setChecked] = useState(false)\r\n  const [ValueOfSlider, setValueOfSlider] = useState(0)\r\n  let initialmarks = [];\r\n  const step =  parseInt(98 / (CurrentQuestion.choices.values.length -1 ))\r\n\r\n  CurrentQuestion.choices.values.forEach((item  , index) => {\r\n\r\n    initialmarks.push ({\r\n      id: item.id ,\r\n      value: index + 1 === CurrentQuestion.choices.values.length ? 100 : 2 + (index * step) , \r\n      label: item.caption ,  \r\n      icon: item.icon ? item.icon : Icons[parseInt(((7/CurrentQuestion.choices.values.length)*(index + 1)) - 1 )]\r\n    })\r\n  })  \r\n\r\n  let marks = initialmarks\r\n\r\n useEffect(() => {\r\n  CurrentQuestion.choices.values.forEach(item => {\r\n    if (item.status === true) {\r\n      marks.forEach(element => {\r\n        if (element.id === item.id) {\r\n          setValueOfSlider(element.value)\r\n        }\r\n      })\r\n    }\r\n  })\r\n }, [])\r\n\r\n  function valueLabelFormat(value) {\r\n\r\n    var test = marks.filter((mark) => mark.value === value);\r\n      if (test[0]) {\r\n        return test[0].icon\r\n      }\r\n  }\r\n\r\n \r\n\r\n  const SliderChangeHandler = ( e , val ) => {\r\n    setValueOfSlider(val)\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    marks.forEach(item => {\r\n      if (item.value === val) {\r\n        updateCurrentQuestion.choices.values.forEach(element => {\r\n          if (element.id === item.id) {\r\n            element.status = true\r\n          } else {\r\n            element.status = false\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    \r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n    // dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: validate })\r\n  }\r\n\r\n\r\n  const checkboxChangeHandler = () => {\r\n    setValueOfSlider(0)\r\n    setChecked(prev => !prev)\r\n    let updateState = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateState.noidea.status = !updateState.noidea.status\r\n    updateState.choices.values.forEach(item => {\r\n      item.status = false\r\n    })\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateState });\r\n    let {Validate} = store.getState().validate\r\n    dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: updateState.noidea.status })\r\n}\r\n\r\n  return (\r\n    <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n          <div className={classes.root}>\r\n            <NoIdeaCheckbox\r\n                className={clsx({\r\n                    [classes.NoIdeaStatus]: !CurrentQuestion.noidea , \r\n                    [classes.NoIdeaCheckbox]: true\r\n                })}\r\n                checked={CurrentQuestion.noidea.status}\r\n                onChange={checkboxChangeHandler}\r\n              />\r\n              <Slider\r\n                disabled={CurrentQuestion.noidea.status}\r\n                // defaultValue={0}\r\n                value={ValueOfSlider}\r\n                classes={{\r\n                  root: classes.SliderRoot ,\r\n                  rail: classes.Rail, \r\n                  track: classes.Track ,\r\n                  markLabel: classes.MarkLabel , \r\n                  thumb: classes.Thumb\r\n                }}\r\n                onChange={( e , val) => SliderChangeHandler( e , val )}\r\n                className={clsx({\r\n                  [classes.SliderOpacity]: Checked\r\n                })}\r\n                valueLabelFormat={valueLabelFormat}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider-restrict\"\r\n                step={null}\r\n                valueLabelDisplay=\"auto\"\r\n                marks={marks}\r\n              />\r\n            \r\n        </div>\r\n    </QuestionTemplate>\r\n  );\r\n}\r\n","/* eslint-disable no-use-before-define */\r\nimport React , {useState , useEffect} from 'react';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Root: {\r\n    display: \"flex\" , \r\n    justifyContent: \"center\"\r\n  }\r\n}))\r\n\r\n\r\nexport default function SingleDropDown(props) {\r\n  let dispatch = useDispatch();\r\n  // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  let CurrentQuestion = {...props} \r\n  const [ValueOfAutoComplete, setValueOfAutoComplete] = useState(null)\r\n  const classes = useStyles();\r\n  \r\n  useEffect(() => {\r\n    let ValueOfAuto = null;\r\n    CurrentQuestion.choices.values.forEach(item => {\r\n      if (item.status) {\r\n        ValueOfAuto = item\r\n      }\r\n    })\r\n    setValueOfAutoComplete(ValueOfAuto)\r\n    \r\n  }, [])\r\n  const InputHandler = (e , val) => {\r\n\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    if (val) {\r\n    updateCurrentQuestion.choices.values.forEach((item  , index) => {\r\n        if (item.id === val.id) {\r\n          item.status = true;\r\n          setValueOfAutoComplete(item)\r\n        } else {\r\n          item.status = false;\r\n        }\r\n      })\r\n    } else {\r\n      updateCurrentQuestion.choices.values.forEach(item => {\r\n        item.status = false\r\n      })\r\n    }\r\n    \r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n      <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n          <div className={classes.Root}>\r\n            <Autocomplete\r\n              noOptionsText={'موردی یافت نشد'}\r\n                onChange={(e , val) => InputHandler(e , val)}\r\n                options={CurrentQuestion.choices.values}\r\n                getOptionLabel={(option) => option.caption}\r\n                value={ValueOfAutoComplete}\r\n                style={{ width: 400 , padding: \"20px\" }}\r\n                renderInput={(params) => <TextField\r\n                                          {...params} \r\n                                          label={props.caption} \r\n                                          variant=\"outlined\" />}\r\n            />\r\n\r\n          </div>\r\n      </QuestionTemplate>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React , {useState , useEffect} from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Root: {\r\n    display: \"flex\" , \r\n    justifyContent: \"center\" ,\r\n  } ,\r\n\r\n  Autocomplete: {\r\n    width: \"70%\" , \r\n    padding: \"20px\"\r\n  }\r\n}))\r\n\r\nexport default function MultiDropDown(props) {\r\n  let dispatch = useDispatch();\r\n  let CurrentQuestion = {...props} \r\n  const [ValueOfAutoComplete, setValueOfAutoComplete] = useState([])\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let ValueOfAuto = [];\r\n    CurrentQuestion.choices.values.forEach(item => {\r\n      if (item.status) {\r\n        ValueOfAuto.push(item)\r\n      }\r\n    })\r\n    setValueOfAutoComplete([...ValueOfAuto])\r\n    \r\n  }, [CurrentQuestion.choices.values])\r\n  \r\n  const InputHandler = (e , list , reason , detail) => {\r\n    setValueOfAutoComplete([...list])\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateCurrentQuestion.choices.values.forEach(item => {\r\n      if (list[0]) {\r\n        list.forEach(element => {\r\n          if (element.id === item.id) {\r\n            item.status = true;\r\n\r\n          } else if (element.id === item.id) {\r\n            item.status = false\r\n          }\r\n        })\r\n      } else {\r\n        item.status = false\r\n      }\r\n    })\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n  }\r\n\r\n  return (\r\n    <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n        <div className={classes.Root}>\r\n          <Autocomplete\r\n              className={classes.Autocomplete}\r\n              value={ValueOfAutoComplete}\r\n              onChange={(e , list, reason , detail) => InputHandler(e , list, reason , detail)}\r\n              multiple\r\n              id=\"tags-outlined\"\r\n              options={CurrentQuestion.choices.values}\r\n              getOptionLabel={(option) => option.caption}\r\n              filterSelectedOptions\r\n              renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label={props.caption}\r\n            />\r\n          )}\r\n        />\r\n        </div>\r\n    </QuestionTemplate>\r\n  );\r\n}\r\n\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React , {useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport QuestionTemplate from '../../../Components/UI/WrapperComponent/QuestionTemplate';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n        display: \"flex\", \r\n        justifyContent: \"center\"\r\n    }\r\n}))\r\n\r\n\r\nexport default function CascadingDropDown(props) {\r\n    let dispatch = useDispatch();\r\n    // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n    let CurrentQuestion = {...props} \r\n    let initialParent;\r\n    let initialChild;\r\n\r\n    CurrentQuestion.choices.parentValues.forEach(item => {\r\n        if (item.status) {\r\n            initialParent = item\r\n        }\r\n    })\r\n    CurrentQuestion.choices.childValues.forEach(item => {\r\n        if (item.status) {\r\n            initialChild = item\r\n        }\r\n    })\r\n\r\n\r\n    const classes = useStyles();\r\n    const [Child, setChild] = useState(initialChild)\r\n    const [Parnet, setParnet] = useState(initialParent)\r\n    // WE FIRST SAVE INITIAL CHILD_DATA THAT COMES FROM PROPS IN NEW VARIABLE \r\n    // WHEN PARENT INPUT CHANGE WE LOOP THROUGH THAT TO \r\n    //  GENRATE NEW FILTER CHILD ACORDING TO THE PARENT SELECTED\r\n\r\n    let initialChildData = CurrentQuestion.choices.childValues.slice();\r\n\r\n\r\n    // OPTION FOR PARENT DATA ALWAYS EQUAL TO THE PROPS.PARENT\r\n    // BUT FOR CHILD WE SHOULD FILTER IT ACORDING TO THE PARENT \r\n    // THIS STATE DEFINE TO DO THAT AND INITIALY SET TO THE PROPS.CHILDDATA\r\n\r\n    const [ChildData, setChildData] = useState(CurrentQuestion.choices.childValues)\r\n    let validate = false\r\n\r\n   // TRIGGER WHEN PARENT INPUT CHANGE \r\n  const parentHandler = (e , list) => {\r\n      \r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n\r\n      setParnet({...list})\r\n    // SETPARENT TO THE INPUT THAT USER SELECT IN DROP_DOWN\r\n    // setParent({...list})\r\n\r\n    updateCurrentQuestion.choices.parentValues.forEach(item => {\r\n        if (list) {\r\n            if (list.id === item.id) {\r\n                item.status = true\r\n                validate = true;\r\n            } else {\r\n                item.status = false\r\n            }\r\n        } else {\r\n            item.status = false\r\n            validate = false\r\n        }\r\n    })\r\n    let updateChildData = [];\r\n    initialChildData.forEach(item => {\r\n        if (list) {\r\n            if (item.parentId === list.id) {\r\n                updateChildData.push(item)\r\n            }\r\n        }\r\n    \r\n    })\r\n\r\n    setChildData(updateChildData)\r\n\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: validate })\r\n  }\r\n\r\n  const childHandler = (e , list) => {  \r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    updateCurrentQuestion.choices.childValues.forEach(item => {\r\n        if (list) {\r\n            if (list.id === item.id) {\r\n                item.status = true\r\n            } else {\r\n                item.status = false\r\n            }\r\n        } else {\r\n            item.status = false\r\n        }\r\n    })\r\n        setChild({...list})\r\n        dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n  }\r\n\r\n  return (\r\n\r\n      <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n          <div className={classes.Root}>\r\n            <Autocomplete\r\n                noOptionsText={'موردی یافت نشد'}\r\n                onChange={(e , list) => parentHandler(e , list)}\r\n                id=\"parent-combo-box\"\r\n                options={CurrentQuestion.choices.parentValues}\r\n                getOptionLabel={(option) => {\r\n                    if (!option.caption) {\r\n                        return \"\"\r\n                    }\r\n                    return option.caption\r\n                }}\r\n                value={Parnet}\r\n                // options={props.ParentData}\r\n                // getOptionLabel={(option) => {\r\n                //     if(!option.title) {\r\n                //         return \"\"\r\n                //     }\r\n                //     return option.title\r\n                // }}\r\n                style={{ width: 400 , padding: \"20px\" }}\r\n                renderInput={(params) => <TextField\r\n                                                {...params} \r\n                                            label={props.parent} \r\n                                            variant=\"outlined\" />}\r\n            />\r\n            <Autocomplete\r\n                noOptionsText={'موردی یافت نشد'}\r\n                onChange={(e , list) => childHandler(e , list)}\r\n                id=\"child-combo-box\"\r\n                options={ChildData}\r\n                getOptionLabel={(option) => {\r\n                    if (!option.caption) {\r\n                        return \"\"\r\n                    }\r\n                    return option.caption\r\n                }}\r\n                value={Child}\r\n                // options={ChildData} \r\n                // getOptionLabel={(option) => {\r\n                //     if(!option.title) {\r\n                //         return \"\"\r\n                //     }\r\n                //     return option.title\r\n                // }}\r\n                style={{ width: 400 , padding: \"20px\" }}\r\n                renderInput={(params) => <TextField\r\n                                                {...params} \r\n                                            label={props.child} \r\n                                            variant=\"outlined\" />}\r\n                />\r\n          </div>\r\n      </QuestionTemplate>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import \"date-fns\";\r\nimport React , {useState , useEffect} from \"react\";\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nimport QuestionTemplate from \"../../../Components/UI/WrapperComponent/QuestionTemplate\";\r\n\r\n\r\n\r\nexport default function TimePicker(props) {\r\n  let dispatch = useDispatch();\r\n  // let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  let CurrentQuestion = {...props} \r\n\r\n  if (CurrentQuestion.choices.description !== \"\") {\r\n    var initialDate = new Date()\r\n    let TimeArray = CurrentQuestion.choices.description.split(\":\");\r\n    initialDate.setHours(parseInt(TimeArray[0]));\r\n    initialDate.setMinutes(parseInt(TimeArray[1]))\r\n  }\r\n\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(initialDate);\r\n    // new Date(\"2014-08-18T21:11:54\")\r\n\r\n  const handleDateChange = (date) => {\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    let min = date.getMinutes();\r\n    let hour = date.getHours();\r\n    let timeString = `${hour}` + \":\" + `${min}`;\r\n     updateCurrentQuestion.choices.description = timeString;\r\n    setSelectedDate(date);\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.CHECK_FOR_REQUIRE_VALIDATE , CurrentQuestion: updateCurrentQuestion })\r\n  };\r\n\r\n  return (\r\n  <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n    <div style={{width: \"400px  \" , margin: \"auto\"}}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container>\r\n          <KeyboardTimePicker\r\n          ampm={false}\r\n          inputVariant=\"outlined\"\r\n          color=\"primary\"\r\n          // className={classes.TimePicker}\r\n            margin=\"normal\"\r\n            id=\"time-picker\"\r\n            label=\"زمان\"\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change time\"\r\n            }}\r\n          />\r\n        </Grid>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  </QuestionTemplate>\r\n  );\r\n}\r\n","import React, { useState , useEffect} from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../../Redux/Actions/actionTypes';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport QuestionTemplate from \"../../../Components/UI/WrapperComponent/QuestionTemplate\";\r\nimport clsx from \"clsx\";\r\nimport { blueGrey } from \"@material-ui/core/colors\";\r\n// fake data generator\r\n// const getItems = count =>\r\n//   Array.from({ length: count }, (v, k) => k).map(k => ({\r\n//     id: `item-${k}`,\r\n//     choice: `item ${k}`\r\n//   }));\r\n\r\nconst styles = theme => ({\r\n  DraggAbleListIsDraggin: {\r\n    backgroundColor: theme.palette.success.main , \r\n    color: \"blue\" , \r\n  } , \r\n\r\n  DraggAbleListNotDragging: {\r\n    backgroundColor: blueGrey[700]\r\n  }\r\n});\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  // padding: grid * 2,\r\n  padding: \"10px 30px\" ,\r\n  margin: `0 0 ${grid}px 0`,\r\n  color: isDragging ? \"black\" : \"white\", \r\n\r\n  // change background colour if dragging\r\n  // background: isDragging ? \"green\" : \"hsl(215, 14%, 37.5%)\",\r\n  borderRadius: \"10px\",\r\n  boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\" ,\r\n  height: \"40px\" ,\r\n  border: \"3px balck solid\" ,\r\n\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"\",\r\n  padding: \"10px 50px\",\r\n  width: \"70%\" , \r\n  margin: \"auto\" ,\r\n  borderRadius: \"10px\" , \r\n});\r\n\r\nconst RankingDAD2 = (props) => {\r\n\r\n  let dispatch = useDispatch();\r\n  let CurrentQuestion = {...props} \r\n\r\n  let initialState = CurrentQuestion.choices.values.map(item => {\r\n    return {id: item.id.toString() , choice: item.caption}\r\n  })\r\n  \r\n  const [state, setstate] = useState({\r\n    items: initialState\r\n  })\r\n\r\n  useEffect(() => {\r\n    let updateCurrentQuestion = JSON.parse(JSON.stringify(CurrentQuestion));\r\n    state.items.forEach((item , StateIndex) => {\r\n      CurrentQuestion.choices.values.forEach((element , CQIndex) => {\r\n        if (parseInt(item.id) === element.id) {\r\n          updateCurrentQuestion.choices.values.splice(StateIndex , 1 , element)\r\n        }\r\n      })\r\n    })\r\n\r\n    dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: updateCurrentQuestion })\r\n    dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true })\r\n\r\n  }, [state.items])\r\n\r\n  \r\n\r\n\r\n\r\n  function onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n  \r\n\r\n    const items = reorder(\r\n     state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    setstate({\r\n      items\r\n    });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n    const { classes } = props;\r\n    return (\r\n      <QuestionTemplate number={CurrentQuestion.number} text={CurrentQuestion.caption}>\r\n          <div >\r\n          <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable style={{backgroundColor: \"red\"}} droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                      className={clsx({\r\n                        [classes.DraggAbleListIsDraggin]: snapshot.isDragging ,\r\n                        [classes.DraggAbleListNotDragging]: !snapshot.isDragging\r\n                      })}\r\n                    >\r\n                      {item.choice}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      </div>\r\n      </QuestionTemplate>\r\n    );\r\n  \r\n}\r\n\r\nexport default  withStyles(styles, { withTheme: true })(RankingDAD2);\r\n// Put the thing into the DOM!\r\n","\r\nimport Shamsi from \"../SingleSelect/Shamsi/Shamsi\";\r\nimport MultiCheckbox from \"../MultiSelect/MultiCheckbox/MultiCheckbox\";\r\nimport RadioCustom from \"../SingleSelect/RadioCustom/RadioCustom\";\r\nimport EmailField from \"../SingleSelect/EmailField/EmailField\";\r\nimport LandlinePhone from \"../SingleSelect/LandlinePhone/LandlinePhone\";\r\nimport MultiLineInput from \"../SingleSelect/MultiLineInput/MultiLineInput\";\r\nimport NationalCode from \"../SingleSelect/NationalCode/NationalCode\";\r\nimport PhoneNumber from \"../SingleSelect/PhoneNumber/PhoneNumber\";\r\nimport SimpleNumberInput from \"../SingleSelect/SimpleNumberInput/SimpleNumberInput\";\r\nimport CustomSlider from \"../SingleSelect/Slider/Slider\";\r\nimport SingleDropDown from \"../SingleSelect/SingleDropDown/SingleDropDown\";\r\nimport MultiDropDown from \"../MultiSelect/MultiDropDown/MultiDropDown\";\r\nimport CascadingDropDown from '../MultiSelect/CascadingDropDown/CascadingDropDown'\r\nimport TimePicker from '../SingleSelect/TimePicker/TimePicker';\r\nimport RankingDAD from \"../MultiSelect/RankingDAD/RankingDAD\";\r\n\r\n\r\nconst QuestionFilter = (CurrentQuestion) => {\r\n   if (CurrentQuestion) {\r\n        switch (CurrentQuestion.choiceTypeId) {\r\n            case 12: {\r\n                return (\r\n                    <MultiCheckbox\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 13: {\r\n                return (\r\n                    <RadioCustom \r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 14: {\r\n                return (\r\n                    <EmailField\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 15: {\r\n                return (\r\n                    <LandlinePhone \r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 16: {\r\n                return (\r\n                    <MultiLineInput\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 17: {\r\n                return (\r\n                    <NationalCode\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 18: {\r\n                return (\r\n                    <PhoneNumber\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 19: {\r\n                return (\r\n                    <Shamsi\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 20: {\r\n                return (\r\n                    <SimpleNumberInput\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 21: {\r\n                return (\r\n                    <CustomSlider\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 22: {\r\n                return (\r\n                    <SingleDropDown\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 23: {\r\n                return (\r\n                    <MultiDropDown\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 24: {\r\n                return (\r\n                    <TimePicker\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 25: {\r\n                return (\r\n                    <CascadingDropDown\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            case 26: {\r\n                return (\r\n                    <RankingDAD\r\n                        {...CurrentQuestion}\r\n                    />\r\n                )\r\n            }\r\n            default : return null;\r\n        }\r\n   }\r\n}\r\n\r\nexport default QuestionFilter;\r\n\r\n\r\n","\r\n\r\n// GET DATA OBJECT AND RETURN THE NEXT QUESTION THAT SHOULD RENDER \r\nexport const ReturnQuestionTurn = ( Questions ) => {\r\n    for (let i = 0; i < Questions.length; i++) {\r\n        if (Questions[i].answered === false && Questions[i].display === true) {\r\n            return Questions[i];\r\n        } \r\n    }\r\n    \r\n}\r\n// GET ID OF CHOICES IN STRING FROMAT (\"45,56,2\") AND CHANG DISPLAY OF THAT CHOICE ACORDING TO BOOL \r\nexport const deletedChoiceIdHandler = (Data ,choiceStringId , bool) => {\r\n    let stringArr = choiceStringId.split(\",\");\r\n    let intArr = stringArr.map(item => {\r\n        return parseInt(item)\r\n    })\r\n    Data.forEach((item , index) => {\r\n        if (item.choices.values) {\r\n            item.choices.values.forEach((element , index) => {\r\n                intArr.forEach(lastelement => {\r\n                    if (lastelement === element.id) {\r\n                        element.dispaly = bool\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// GET ID OF QUESTION TO CHANG DISPLAY STATUS TRUE TO FALSE ACORDING TO BOOL \r\nexport const deletedQuestionIdHandler = (Data ,QuestionStringId , bool) => {\r\n    let stringArr = QuestionStringId.split(\",\");\r\n    let intArr = stringArr.map(item => {\r\n        return parseInt(item)\r\n    })\r\n    Data.forEach(item => {\r\n        intArr.forEach(element => {\r\n            if (item.id === element) {\r\n                item.dispaly = bool\r\n            }\r\n        })\r\n    })\r\n    \r\n}\r\n\r\n\r\nexport const checkConditionOfChoices = (questionobject , data) => {\r\n    // GET ID OF CHOICES IN STRING FROMAT (\"45,56,2\") AND CHANG DISPLAY OF THAT CHOICE ACORDING TO BOOL \r\nconst deletedChoiceIdHandler = (choiceStringId , bool , data) => {\r\n    let stringArr = choiceStringId.split(\",\");\r\n    let intArr = stringArr.map(item => {\r\n        return parseInt(item)\r\n    })\r\n    data.forEach((item , index) => {\r\n        if (item.choices.values) {\r\n            item.choices.values.forEach((element , index) => {\r\n                intArr.forEach(lastelement => {\r\n                    if (lastelement === element.id) {\r\n                        element.display = bool\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    })\r\n}\r\n// GET ID OF QUESTION TO CHANG DISPLAY STATUS TRUE TO FALSE ACORDING TO BOOL \r\nconst deletedQuestionIdHandler = (QuestionStringId , bool , data) => {\r\n    let stringArr = QuestionStringId.split(\",\");\r\n    let intArr = stringArr.map(item => {\r\n        return parseInt(item)\r\n    })\r\n    data.forEach(item => {\r\n        intArr.forEach(element => {\r\n            if (item.id === element) {\r\n                item.display = bool\r\n                if (bool === false) {\r\n                    item.answered = false\r\n                    item.choices.values.forEach(valuesStatus => {\r\n                        valuesStatus.status = false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    })\r\n    \r\n}\r\n    // از دو تابع بالا استفاده میکند و براثاث یک آبجکت سوال که بهش پاس داده میشود آبجکت کلی سوال ها را آپدیت میکند\r\n    // منظور از آپدیت این است که بر اثاث گزینه هایی که انتحاب شده در آبجکت سوال \r\n    //display\r\n    // را هم برای سوال هایی که باید حذف شوند و هم برای گزینه ها تغییر میدهد\r\n   if (questionobject.choices.values) {\r\n        questionobject.choices.values.forEach(item => {\r\n            if (item.deletedChoiceId) {\r\n                deletedChoiceIdHandler(item.deletedChoiceId , !item.status , data)\r\n            }\r\n            if (item.deletedQuestionId) {\r\n            deletedQuestionIdHandler(item.deletedQuestionId , !item.status , data)\r\n            }\r\n        //    deletedChoiceIdHandler(item.deletedChoiceId , true , data)\r\n    })\r\n   }\r\n}\r\n// FINISH FUNCITON\r\n \r\n\r\n\r\n\r\n\r\n\r\n// سوال فعلی که اطلاعات جدید در آن ثبت شده را در دیتا اصلی جایگزین میکند\r\n// اول آیدی سوال را در دیتا کلی پیدا میکند و سوال را جایگزین میکند\r\nexport const ReplaceCurrentQuestionInData = (currentquestion , data) => {\r\n    if (currentquestion && data) {\r\n        data.forEach((item , index) => {\r\n                if (item.id === currentquestion.id) {\r\n                    currentquestion.answered = true\r\n                    data.splice(index , 1 , currentquestion)\r\n                }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport  const OneStepBackFromCurrentQuestion = (currentquestion , data) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n        if (currentquestion.id === data[i].id) {\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                if (data[j].display === true) {\r\n                    return  data[j]\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const IsCurrentQuestionHaveAnswerd = (currentquesiton) => {\r\n    let haveAnswer = false;\r\n    if (currentquesiton.choices.description !== \"\") {\r\n        haveAnswer = true\r\n    }\r\n    if (currentquesiton.noidea) {\r\n        if (currentquesiton.noidea.status === true) {\r\n            haveAnswer = true;\r\n        }\r\n    }\r\n   if (currentquesiton.choices.values) {\r\n        currentquesiton.choices.values.forEach(item => {\r\n            if ( item.status === true ) {\r\n                haveAnswer = true; \r\n            }\r\n        })\r\n   }\r\n\r\n    return haveAnswer;\r\n}\r\n\r\n\r\n// GET CURRENT QUESTION AS ARGUMENT AND RETURN OBJECT FOR SENDITG TO THE BACK \r\nconst answerGeneratorForBack = (currentquestion) => {\r\n    var object = {};\r\n    object.questionId = currentquestion.id;\r\n    object.description = currentquestion.description;\r\n    if (currentquestion.choices.values) {\r\n        object.choicesId = currentquestion.choices.values.map(item => {\r\n            return item.id\r\n        })\r\n    } else {\r\n        object.choicesId = null;\r\n    }\r\n    return object\r\n}","import React from 'react';\r\nimport \"./CustomModal.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"500px\" ,\r\n    Minheight: \"300px\" ,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius: \"5px\" , \r\n    outline: \"none\"\r\n  },\r\n\r\n  Message: {\r\n    width: \"100%\" , \r\n    textAlign: \"center\" ,\r\n\r\n  } ,\r\n\r\n  ButtonGroup: {\r\n    backgroundColor: \"red\" ,\r\n    width: \"100px\" ,\r\n    margin: \"auto\" ,\r\n  } , \r\n\r\n}));\r\n\r\nexport default function CustomModal(props) {\r\n  const classes = useStyles();\r\n\r\n//   const handleOpen = () => {\r\n//     setOpen(true);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setOpen(false);\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {/* <button type=\"button\" onClick={handleOpen}>\r\n        react-transition-group\r\n      </button> */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={props.ModalStatus}\r\n        onClose={props.ModalhandleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={props.ModalStatus}>\r\n          <div className={classes.paper}>\r\n            <Grid container direction=\"column\">\r\n                <Grid item style={{display: \"flex\" , justifyContent: \"center\" , position: \"relative\" , right: \"10px\"}}>\r\n                  {/* <IconButton onClick={props.ModalhandleClose} size=\"small\" color=\"secondary\">\r\n                      <CancelIcon />\r\n                  </IconButton> */}\r\n                  {/* <WarningIcon style={{fontSize: \"50px\" , color: \"red\" }} /> */}\r\n                </Grid>\r\n                <Grid item >\r\n                    <h2 className={classes.Message}>{props.ModalMessageHeader}</h2>\r\n                    <h4 className={classes.Message}>{props.ModalMessageDescription}</h4>\r\n                </Grid>\r\n                <Grid item style={{display: \"flex\" , justifyContent: \"center\" , marginTop: \"10px\"}}>\r\n                    <ButtonGroup className={classes.ButtonGroup} variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                      <Button color=\"primary\" onClick={props.modalSubmitHandler}>تایید</Button>\r\n                      <Button color=\"secondary\" onClick={props.ModalCancel}>رد</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React  ,{useState , useRef} from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport * as actionTypes from '../../Redux/Actions/actionTypes';\r\nimport { Grid } from '@material-ui/core';\r\nimport { ReturnQuestionTurn } from '../../functions/handleData';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport { IconButton } from '@material-ui/core';\r\nimport CustomModal from '../../Partial/CustomModal/CustomModal';\r\nimport * as actionCreators from '../../Redux/Actions/CurrentQuestionAction';\r\nimport { blue, green, grey, lime, red, yellow } from '@material-ui/core/colors';\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    overflow: \"auto\" ,\r\n    width: \"80%\" , \r\n    height: \"80%\" ,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius: \"10px\" , \r\n    backgroundColor: grey[50] , \r\n  },\r\n\r\n  QuestionWraper: {  \r\n    padding: \"20px\"\r\n  } ,\r\n\r\n  CurrentTurnQuestion: {\r\n    backgroundColor: blue[800] ,\r\n    color: \"white\" ,\r\n    cursor: \"pointer\" , \r\n    borderRadius: \"5px\" , \r\n    margin: \"5px\" , \r\n    // border: \"1px purple solid\" , \r\n    \"&:hover\": {\r\n      transform: \"scale(1.004)\"\r\n    }\r\n  } ,\r\n\r\n  CurrentTurnQuestionIcon: {\r\n    color: blue[800] , \r\n  } ,\r\n\r\n\r\n  DeletedQuestion: {\r\n    color: \"black\", \r\n    cursor: \"no-drop\" ,\r\n    borderRadius: \"5px\" , \r\n    margin: \"5px\" , \r\n    border: \"2px #d50000 solid\" , \r\n    backgroundColor: red[50] ,\r\n    opacity: \"0.5\" ,\r\n  } ,\r\n\r\n  DeletedQuestionIcon: {\r\n    color: \"#d50000\" ,\r\n    fontSize: \"1.2rem\"\r\n  } ,\r\n\r\n  NotAnsweredQuestion: {\r\n    cursor: \"no-drop\" , \r\n    opacity: \"0.5\" ,\r\n    borderRadius: \"5px\" , \r\n    margin: \"5px\" , \r\n    border: \"2px grey solid\" ,\r\n  } , \r\n\r\n  NotAnsweredQuestionIcon: {\r\n    color: \"grey\" ,\r\n    fontSize: \"1.2rem\"\r\n  } ,\r\n\r\n  AnsweredQuestion: {\r\n    color: \"black\", \r\n    cursor: \"pointer\" , \r\n    borderRadius: \"5px\" , \r\n    margin: \"5px\" , \r\n    border: \"2px #2e7d32 solid\" , \r\n    backgroundColor: green[50] ,\r\n    \"&:hover\": {\r\n      transform: \"scale(1.004)\"\r\n    }\r\n  } , \r\n\r\n  AnsweredQuestionIcon: {\r\n    color: \"#2e7d32\" , \r\n    fontSize: \"1.2rem\"\r\n  } ,\r\n\r\n  CurrentQuestion: {\r\n    color: \"white\", \r\n    // backgroundColor: \"#ffea00\" ,\r\n    backgroundColor: yellow[900] ,\r\n    cursor: \"pointer\" , \r\n    borderRadius: \"5px\" , \r\n    margin: \"5px\" , \r\n    \"&:hover\": {\r\n      transform: \"scale(1.004)\"\r\n    }\r\n  } ,\r\n\r\n  CurrentQuestionIcon: {\r\n    color: \"#ffea00\" , \r\n  } ,\r\n\r\n  ModalHeader: {\r\n    marginBottom: \"10px\" , \r\n    display: \"flex\" , \r\n    justifyContent: \"space-between\" , \r\n    alignItems: \"center\" ,\r\n    // border: \"2px black solid\" ,\r\n    backgroundColor: grey[900] , \r\n    color : \"white\" , \r\n    borderRadius: \"10px\" , \r\n    marginLeft: \"15px\"  , \r\n    padding: \"0px 10px\" \r\n  } , \r\n\r\n  HintWraper: {\r\n    display: \"flex\" , \r\n    justifyContent: \"center\" , \r\n    alignItems: \"center\" , \r\n  } , \r\n\r\n  CloseModalButton: {\r\n    color: \"white\"\r\n  }\r\n\r\n\r\n\r\n}));\r\n\r\nexport default function EditeModal(props) {\r\n  // برای نشان دادن یا ندادن مودال اخطار\r\n  const [ModalStatus, setModalStatus] = useState(false)\r\n  // حالت های مختلف اخطار که طبق آن دکمه تایید و رد کردن مودال کارهای مختلفی انجام میدهد\r\n  const [ModalSituation, setModalSituation] = useState(null)\r\n\r\n  const [ClickItemId, setClickItemId] = useState(null)\r\n  // مسیج هایی که در حالت های مختلف مودال باید در مودال نشان داده شود\r\n  const [ModalMessage, setModalMessage] = useState({\r\n    ModalMessageDescription: null, \r\n    ModalMessageHeader: null\r\n    \r\n  })\r\n  // سوال جاری که در ریداکس قرار دارد\r\n  let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  // ولید بودن جوابی که برای سوال جاری وارد شده است\r\n  let {Validate} = useSelector(state => state.validate);\r\n  // آیا جواب سوال جاری دست خورده یا نه \r\n  let {CurrentQuestionChange} = useSelector(state => state.currentqa);\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const store = useStore()\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const Data = useSelector(state => state.qa.Data)\r\n  let paperRef = useRef(null);\r\n  let CurrentQuestionRef = useRef(null);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n\r\nconst clickHandler = (e , id ) => {\r\n  // ایا سوال جاری دارای جواب است ؟\r\n  const Data = store.getState().qa.Data;\r\n  // سوالی که نوبت پرسیدنش است را برمیگرداند\r\n  // با سوال جاری فرق میکند\r\n  // این سوالی است که اگر دکمه \r\n  // NEXT\r\n  //را بزند وارد آن سوال میشود\r\n  let TurnedQuesiton = ReturnQuestionTurn(Data)\r\n\r\n  let clickedItem = null ;\r\n  Data.forEach(item => {\r\n    if (item.id === id) {\r\n      clickedItem = item\r\n      setClickItemId(item.id)\r\n    }\r\n  })\r\n\r\n  // اگر روی سوال جاری کلیک شد فقط مودال بسته میشود\r\n  if (CurrentQuestion.id === id) {\r\n    // setOpen(false)\r\n    console.log(paperRef.current.scrollTop)\r\n    console.log(CurrentQuestionRef)\r\n    paperRef.current.scrollTop = 400\r\n  } else {\r\n\r\n    // در اینجا 6 حالت مختلف برای دکمه ی \r\n  // BACK\r\n  // در نظر گرفته شده که طبق هر کدام باید چه اتفاقی بیفتد\r\n  // و در سه حالت آن که نیاز به باز شدم مودال است \r\n  // ModalSituation\r\n  // را به حالت های مختلف ست میکند تا وفتی روی دکمه تایید مودال زده شده کارهای متفاوتی انجام شود\r\n  \r\n  //شرط اول \r\n  // روی سوالی هستیم که نوبتش است\r\n  // یا میتوان گفت آیا سوال جاری با سوالی که نوبتش است یکی است\r\n  if (CurrentQuestion.id === TurnedQuesiton.id) {\r\n    // ایا جواب سوال تغییر کرده است\r\n    if (CurrentQuestionChange === true) {\r\n          // آیا پس از تغییر ، تغییرات وارد شده ولید است\r\n          if (Validate.RequireValidate) {\r\n                dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n                dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n                dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n                dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n                setOpen(false);\r\n          } else {\r\n            setModalMessage({...ModalMessage , \r\n              ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n              ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n            })\r\n            setModalSituation(\"TURN_NOT_VALIDATE\");\r\n            setModalStatus(true)\r\n          }\r\n\r\n\r\n  } else {\r\n    \r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      setOpen(false);\r\n  }\r\n\r\n} else {\r\n    // ایا جواب سوال تغییر کرده است\r\n    if (CurrentQuestionChange === true) {\r\n       // ایا پس از تغییر ، تغییرات وارد شده ولید است\r\n          if (Validate.RequireValidate === true) {\r\n            setModalMessage({...ModalMessage , \r\n              ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n              ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n            })\r\n            setModalSituation(\"NOT_TURN_VALIDATE\");\r\n            setModalStatus(true)\r\n          } else {\r\n            setModalMessage({...ModalMessage , \r\n              ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n              ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n            })\r\n            setModalSituation(\"NOT_TURN_NOT_VALIDATE\");\r\n            setModalStatus(true)\r\n          }\r\n\r\n    } else {\r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      setOpen(false);\r\n    }\r\n}\r\n  }\r\n  \r\n}\r\n\r\n\r\n// این تابع وقتی اجرا میشود که دکمه ی تایید مودال زده شود\r\n  // و با توجه به اینکه تو چه وضعیتی مودال فرا خوانده شده کار های متفاوتی میکند\r\n  const modalSubmitHandler = () => {\r\n    const Data = store.getState().qa.Data;\r\n    let clickedItem = null ;\r\n    Data.forEach(item => {\r\n      if (item.id === ClickItemId) {\r\n        clickedItem = item\r\n        // setOpen(false)\r\n      }\r\n    })\r\n    let backupCurrentQuestion;\r\n    Data.forEach(item => {\r\n      if (item.id === CurrentQuestion.id) {\r\n        backupCurrentQuestion = item;\r\n      }\r\n    })\r\n    console.log(ModalSituation)\r\n\r\n    if (ModalSituation === \"TURN_NOT_VALIDATE\") {\r\n\r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      setModalStatus(false);\r\n      setOpen(false);\r\n    } else if (ModalSituation === \"NOT_TURN_VALIDATE\") {\r\n\r\n      dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      setModalStatus(false);\r\n      setOpen(false);\r\n    } else if (ModalSituation === \"NOT_TURN_NOT_VALIDATE\") {\r\n          console.log(\"why this is working\")\r\n          dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: backupCurrentQuestion })\r\n          dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n          dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n          dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n          setModalStatus(false) \r\n          setOpen(false);\r\n    }\r\n      // switch (ModalSituation) {\r\n      //   case (\"TURN_NOT_VALIDATE\"): {\r\n      //     console.log(\"here\")\r\n      //     dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      //     dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      //     dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      //     setModalStatus(false);\r\n      //   }\r\n      //   case (\"NOT_TURN_VALIDATE\"): {\r\n      //     dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n      //     dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      //     dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      //     dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      //     setModalStatus(false);\r\n      //   }\r\n      //   // case (\"NOT_TURN_NOT_VALIDATE\"): {\r\n      //   //   console.log(\"why this is working\")\r\n      //   //   dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: backupCurrentQuestion })\r\n      //   //   dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      //   //   dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      //   //   dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      //   //   setModalStatus(false) \r\n      //   // }\r\n      //   default: {\r\n      //     return null;\r\n      //   }\r\n      // }\r\n\r\n\r\n  }\r\n\r\n  const ModalCancel = () => {\r\n    const Data = store.getState().qa.Data;\r\n    let clickedItem = null ;\r\n    Data.forEach(item => {\r\n      if (item.id === ClickItemId) {\r\n        clickedItem = item\r\n        // setOpen(false)\r\n      }\r\n    })\r\n    setModalStatus(false);\r\n    setOpen(false);\r\n    if (ModalSituation === \"NOT_TURN_VALIDATE\") {\r\n      dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: clickedItem })\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n    }\r\n  }\r\n  \r\n  const ModalhandleClose = () => {\r\n    setModalStatus(false);\r\n  };\r\n\r\n\r\n\r\n  let questionList = [];\r\n\r\n const editeModalHandler = (data) => {\r\n   \r\n   let CurrentTurnId = ReturnQuestionTurn(Data).id\r\n\r\n  if (CurrentQuestion) {\r\n    data.forEach(item => {\r\n      // سوالی که جواب داده نشده ولی نوبت پرسیدنش است\r\n      if (item.id === CurrentTurnId) {\r\n           questionList.push(\r\n             <Grid key={item.id} className={classes.CurrentTurnQuestion} onClick={(e) => clickHandler(e , item.id)} spacing={2} container item direction=\"row\">\r\n \r\n                 <Grid item>\r\n                   {item.number}\r\n                 </Grid>\r\n \r\n                 <Grid item>\r\n                   {item.caption}\r\n                 </Grid>\r\n \r\n             </Grid>\r\n           )\r\n           // سوال جاری که الان رویش هستید\r\n       } else if (item.id === CurrentQuestion.id) {\r\n             questionList.push(\r\n               <Grid ref={CurrentQuestionRef} key={item.id} className={classes.CurrentQuestion} onClick={(e) => clickHandler(e , item.id)} spacing={2} container item direction=\"row\">\r\n \r\n                   <Grid item>\r\n                     {item.number}\r\n                   </Grid>\r\n \r\n                   <Grid item>\r\n                     {item.caption}\r\n                   </Grid>\r\n \r\n               </Grid>\r\n             )\r\n \r\n       } else {\r\n             // سوالی که جواب داده شده\r\n             if (item.answered === true && item.display === true) {\r\n               questionList.push(\r\n                 <Grid key={item.id} className={classes.AnsweredQuestion} onClick={(e) => clickHandler(e , item.id)} spacing={2} container item direction=\"row\">\r\n     \r\n                     <Grid item>\r\n                       {item.number}\r\n                     </Grid>\r\n     \r\n                     <Grid item>\r\n                       {item.caption}\r\n                     </Grid>\r\n     \r\n                 </Grid>\r\n               )\r\n             } \r\n             // سوالی که هنوز جواب داده نشده\r\n             else if (item.answered === false && item.display === true) {\r\n               questionList.push(\r\n                 <Grid key={item.id} className={classes.NotAnsweredQuestion}  spacing={2} container item direction=\"row\">\r\n     \r\n                     <Grid item>\r\n                       {item.number}\r\n                     </Grid>\r\n     \r\n                     <Grid item>\r\n                       {item.caption}\r\n                     </Grid>\r\n     \r\n                 </Grid>\r\n               )\r\n             } \r\n             // سوالی که حذف شده \r\n             else if (item.answered === false && item.display === false) {\r\n               questionList.push(\r\n                 <Grid  key={item.id} className={classes.DeletedQuestion}  spacing={2} container item direction=\"row\">\r\n     \r\n                     <Grid item>\r\n                       {item.number}\r\n                     </Grid>\r\n     \r\n                     <Grid item>\r\n                       {item.caption}\r\n                     </Grid>\r\n     \r\n                 </Grid>\r\n               )\r\n             }\r\n      }\r\n    })\r\n  }\r\n }\r\n\r\n editeModalHandler(Data)\r\n\r\n  return (\r\n    <div  >\r\n      <Button variant=\"contained\" style={{backgroundColor: \"yellow\"}} type=\"button\" onClick={handleOpen}>\r\n        ویرایش  جواب ها\r\n      </Button>\r\n      <CustomModal \r\n                  {...ModalMessage}\r\n                  ModalhandleClose={ModalhandleClose} \r\n                  ModalStatus={ModalStatus} \r\n                  modalSubmitHandler={modalSubmitHandler}\r\n                  ModalCancel={ModalCancel} />\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n            <div ref={paperRef} className={classes.paper}>\r\n                  <div className={classes.ModalHeader}>\r\n                      <div className={classes.HintWraper}>\r\n                          <RadioButtonUncheckedIcon className={classes.AnsweredQuestionIcon} />\r\n                          <span>سوال جواب داه شده</span>\r\n                      </div>\r\n                      <div className={classes.HintWraper}>\r\n                          <FiberManualRecordIcon className={classes.CurrentQuestionIcon}/>\r\n                          <span>سوال جاری</span>\r\n                      </div>\r\n                      <div className={classes.HintWraper}>\r\n                          <RadioButtonUncheckedIcon className={classes.DeletedQuestionIcon} />\r\n                          <span>سوال حذف شده</span>\r\n                      </div>\r\n                      <div className={classes.HintWraper}>\r\n                          <RadioButtonUncheckedIcon className={classes.NotAnsweredQuestionIcon} />\r\n                          <span>سوال جواب داده نشده</span>\r\n                      </div>\r\n                      <div className={classes.HintWraper}>\r\n                          <FiberManualRecordIcon className={classes.CurrentTurnQuestionIcon} />\r\n                          <span>سوال بعدی</span>\r\n                      </div>\r\n                      <IconButton className={classes.CloseModalButton} onClick={handleClose}>\r\n                        <HighlightOffIcon />\r\n                      </IconButton>\r\n                </div>\r\n                <div className={classes.QuestionWraper}>\r\n                    <Grid \r\n                      spacing={2}\r\n                      container\r\n                      direction=\"column\"\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"center\"\r\n                      >\r\n                        {questionList}\r\n                    \r\n                    </Grid>\r\n                </div>        \r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    Root: {\r\n        backgroundColor: \"red\"\r\n    }\r\n}))\r\n\r\n\r\nexport default function DetermineStatus() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Root}>\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        ویرایش سوال ها\r\n      </Button>\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","// در این قسمت سوال ها به نوبت رندر میشوند \r\n// در اینجا از دو مودال هم استفاده شده \r\n// یکی مودال ویرایش سوال ها است\r\n// دومین مودال برای اخطار دادن است که در حالت های مختلف کار های متفاوتی انجام میدهد\r\n\r\n// در مورد توضیحات \r\n// dispatch\r\n// ها و اینکه هر کداچه کاری انجام میدهند به آدرس زیر مراجهه کنید\r\n// ./src/Redux/Actions/ationTypes.js\r\n\r\n\r\n\r\n\r\n\r\nimport React   from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport * as actionTypes from '../../Redux/Actions/actionTypes';\r\nimport { Button } from '@material-ui/core';\r\nimport { useState }  from 'react';\r\nimport { useSelector , useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport * as actionCreators from '../../Redux/Actions/CurrentQuestionAction';\r\nimport QuestionFilter from '../../Questions/QuestionFilter/QuestionFilter';\r\nimport { IsCurrentQuestionHaveAnswerd } from '../../functions/handleData';\r\nimport EditeModal from '../../Questions/EditeModal/EditeModal';\r\nimport DetermineStatus from '../../Questions/DetermineStatus/DetermineStatus';\r\nimport { ButtonGroup } from 'react-bootstrap';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CascadingDropDown from '../../Questions/MultiSelect/CascadingDropDown/CascadingDropDown';\r\nimport CustomModal from '../../Partial/CustomModal/CustomModal';\r\nimport { ReturnQuestionTurn } from '../../functions/handleData';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    // minWidth: 275,\r\n  },\r\n\r\n  DisplayNone: {\r\n    display: \"none\"\r\n  } , \r\n\r\n  HeaderMenu: {\r\n    display: \"flex\" ,\r\n    width: \"100%\" , \r\n    alignItems: \"flex-start\" ,\r\n  } , \r\n\r\n  Footer: {\r\n    // display: \"flex\" ,\r\n    // justifyContent: \"center\" , \r\n    // alignItems: \"center\" , \r\n    // border: \"2px blue solid\" ,\r\n    // height: \"100px\" , \r\n    // // height: \"100px\"   , \r\n    // position: \"absolute\" , \r\n    // bottom: \"0\" , \r\n    // minWidth: \"80%\" ,\r\n    // margin: \"auto\" ,\r\n  } ,\r\n\r\n  ButtonGroup: {\r\n    // display: \"flex\" , \r\n    // width: \"50%\" ,\r\n    // justifyContent: \"space-around\"\r\n\r\n    // position: \"fixed\" , \r\n    // width: \"100%\" ,\r\n    // bottom: \"0px\"  ,\r\n    // height: \"50px\"\r\n  } , \r\n\r\n  NextButton: {\r\n    // width: \"50%\" ,\r\n    // fontSize: \"1.2rem\" , \r\n    // \"&:hover\": {\r\n    // fontSize: \"1.2rem\" , \r\n    // }\r\n  } , \r\n\r\n  BackButton: {\r\n    // width: \"50%\" ,\r\n    // backgroundColor: \"#1B291B\" , \r\n    // color: \"white\" , \r\n    // fontSize: \"1.2rem\" ,\r\n    // \"&:hover\": {\r\n    //   backgroundColor: \"#3D563D\" ,\r\n    //   fontSize: \"1.2rem\"\r\n    // }\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n  const store = useStore()\r\n  let dispatch = useDispatch();\r\n  // برای شروع شدن پرسیدن سوال ها و هیدن شدن دکمه برو بریم\r\n  const [StartStatus, setStartStatus] = useState(false)\r\n  // برای نشان دادن یا ندادن مودال اخطار\r\n  const [ModalStatus, setModalStatus] = useState(false)\r\n  // حالت های مختلف اخطار که طبق آن دکمه تایید و رد کردن مودال کارهای مختلفی انجام میدهد\r\n  const [ModalSituation, setModalSituation] = useState(null)\r\n  // مسیج هایی که در حالت های مختلف مودال باید در مودال نشان داده شود\r\n  const [ModalMessage, setModalMessage] = useState({\r\n    ModalMessageDescription: null, \r\n    ModalMessageHeader: null\r\n    \r\n  })\r\n  // سوال جاری که در ریداکس قرار دارد\r\n  let {CurrentQuestion} = useSelector(state => state.currentqa);\r\n  // ولید بودن جوابی که برای سوال جاری وارد شده است\r\n  let {Validate} = useSelector(state => state.validate);\r\n  // آیا جواب سوال جاری دست خورده یا نه \r\n  let {CurrentQuestionChange} = useSelector(state => state.currentqa);\r\n\r\n  \r\n\r\n  const nextHandler = () => {\r\n    // ایا سوال جاری دارای جواب است ؟\r\n    const Data = store.getState().qa.Data;\r\n    // سوالی که نوبت پرسیدنش است را برمیگرداند\r\n    // با سوال جاری فرق میکند\r\n    // این سوالی است که اگر دکمه \r\n    // NEXT\r\n    //را بزند وارد آن سوال میشود\r\n    let TurnedQuesiton = ReturnQuestionTurn(Data)\r\n    if (CurrentQuestion.id !== TurnedQuesiton.id) {\r\n      if (CurrentQuestionChange === true) {\r\n          if (Validate.RequireValidate === true)  {\r\n              setModalMessage({...ModalMessage , \r\n                ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n                ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n              })\r\n              setModalSituation(\"GO_NEXT_EDITE_VALID\");\r\n              setModalStatus(true)\r\n          }\r\n      } else {\r\n        \r\n        dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: false})\r\n        const Data = store.getState().qa.Data;\r\n        dispatch({ type: 'NEXT_QUESTION' , payload: Data })\r\n      }\r\n    } else {\r\n      // اگر سوال جاری تغییر کرده باشد باید ثبت شود\r\n      if (CurrentQuestionChange) {\r\n        dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n        dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n        dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: false})\r\n        const Data = store.getState().qa.Data;\r\n        dispatch({ type: 'NEXT_QUESTION' , payload: Data })\r\n      }\r\n    }\r\n\r\n    // گرفتن دیتای تغییر پیدا شده در دیسپج های قبلی\r\n    // const Data = store.getState().qa.Data;\r\n\r\n  }\r\n\r\n\r\n  const backHandler = (e , id) => {\r\n    // ایا سوال جاری دارای جواب است ؟\r\n    const Data = store.getState().qa.Data;\r\n    // سوالی که نوبت پرسیدنش است را برمیگرداند\r\n    // با سوال جاری فرق میکند\r\n    // این سوالی است که اگر دکمه \r\n    // NEXT\r\n    //را بزند وارد آن سوال میشود\r\n    let TurnedQuesiton = ReturnQuestionTurn(Data)\r\n\r\n\r\n    // در اینجا 6 حالت مختلف برای دکمه ی \r\n    // BACK\r\n    // در نظر گرفته شده که طبق هر کدام باید چه اتفاقی بیفتد\r\n    // و در سه حالت آن که نیاز به باز شدم مودال است \r\n    // ModalSituation\r\n    // را به حالت های مختلف ست میکند تا وفتی روی دکمه تایید مودال زده شده کارهای متفاوتی انجام شود\r\n    \r\n    //شرط اول \r\n    // روی سوالی هستیم که نوبتش است\r\n    // یا میتوان گفت آیا سوال جاری با سوالی که نوبتش است یکی است\r\n    if (CurrentQuestion.id === TurnedQuesiton.id) {\r\n          // ایا جواب سوال تغییر کرده است\r\n          if (CurrentQuestionChange === true) {\r\n                // آیا پس از تغییر ، تغییرات وارد شده ولید است\r\n                if (Validate.RequireValidate) {\r\n                      dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n                      dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n                      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n                      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n                } else {\r\n                  setModalMessage({...ModalMessage , \r\n                    ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n                    ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n                  })\r\n                  setModalSituation(\"TURN_NOT_VALIDATE\");\r\n                  setModalStatus(true)\r\n                }\r\n\r\n\r\n        } else {\r\n          \r\n            dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n            dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n            dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n        }\r\n\r\n    } else {\r\n          // ایا جواب سوال تغییر کرده است\r\n          if (CurrentQuestionChange === true) {\r\n             // ایا پس از تغییر ، تغییرات وارد شده ولید است\r\n                if (Validate.RequireValidate === true) {\r\n                  setModalMessage({...ModalMessage , \r\n                    ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n                    ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n                  })\r\n                  setModalSituation(\"NOT_TURN_VALIDATE\");\r\n                  setModalStatus(true)\r\n                } else {\r\n                  setModalMessage({...ModalMessage , \r\n                    ModalMessageHeader: \"اطلاعات وارد شده معتبر نیست\"  ,\r\n                    ModalMessageDescription: \"در صورت تایید اطلاعات وارد شده ثبت نمیشود\" \r\n                  })\r\n                  setModalSituation(\"NOT_TURN_NOT_VALIDATE\");\r\n                  setModalStatus(true)\r\n                }\r\n\r\n          } else {\r\n            dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n            dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n            dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n          }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  // این تابع وقتی اجرا میشود که دکمه ی تایید مودال زده شود\r\n  // و با توجه به اینکه تو چه وضعیتی مودال فرا خوانده شده کار های متفاوتی میکند\r\n  const modalSubmitHandler = () => {\r\n    const Data = store.getState().qa.Data;\r\n    let backupCurrentQuestion;\r\n    Data.forEach(item => {\r\n      if (item.id === CurrentQuestion.id) {\r\n        backupCurrentQuestion = item;\r\n      }\r\n    })\r\n\r\n    if (ModalSituation === \"TURN_NOT_VALIDATE\") {\r\n\r\n      dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      setModalStatus(false);\r\n    } else if (ModalSituation === \"NOT_TURN_VALIDATE\") {\r\n\r\n      dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n      dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      setModalStatus(false);\r\n    } else if (ModalSituation === \"NOT_TURN_NOT_VALIDATE\") {\r\n          dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: backupCurrentQuestion })\r\n          dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n          dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n          dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n          setModalStatus(false) \r\n    } else if (ModalSituation === \"GO_NEXT_EDITE_VALID\") {\r\n      dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: false})\r\n      const Data = store.getState().qa.Data;\r\n      dispatch({ type: 'NEXT_QUESTION' , payload: Data })\r\n      setModalStatus(false);\r\n    }\r\n      // switch (ModalSituation) {\r\n      //   case (\"TURN_NOT_VALIDATE\"): {\r\n      //     console.log(\"here\")\r\n      //     dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      //     dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      //     dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      //     setModalStatus(false);\r\n      //   }\r\n      //   case (\"NOT_TURN_VALIDATE\"): {\r\n      //     dispatch(actionCreators.submitAnswer(CurrentQuestion))\r\n      //     dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      //     dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      //     dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      //     setModalStatus(false);\r\n      //   }\r\n      //   // case (\"NOT_TURN_NOT_VALIDATE\"): {\r\n      //   //   console.log(\"why this is working\")\r\n      //   //   dispatch({type: actionTypes.UPDATE_CURRENT_QUESTION , payload: backupCurrentQuestion })\r\n      //   //   dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      //   //   dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      //   //   dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n      //   //   setModalStatus(false) \r\n      //   // }\r\n      //   default: {\r\n      //     return null;\r\n      //   }\r\n      // }\r\n\r\n\r\n  }\r\n\r\n  const ModalCancel = () => {\r\n    const Data = store.getState().qa.Data;\r\n    setModalStatus(false);\r\n    if (ModalSituation === \"NOT_TURN_VALIDATE\") {\r\n      dispatch({type: 'BACK_QUESTION' , Data: Data})\r\n      dispatch({type: actionTypes.SET_CHANGE_CURRENT_QUESTION , payload: false})\r\n      dispatch({type: actionTypes.SET_REQUIRE_VALIDATE , payload: true})\r\n    }\r\n  }\r\n  \r\n  const ModalhandleClose = () => {\r\n    setModalStatus(false);\r\n  };\r\n\r\n  const startHandler = () => {\r\n    const Data = store.getState().qa.Data;\r\n    dispatch({ type: 'NEXT_QUESTION' , payload: Data })\r\n    setStartStatus(true)\r\n  }\r\n    \r\n\r\n\r\n    return (\r\n      <div style={{width: '80%' , margin: \"auto\" }}>\r\n                  <div className={classes.HeaderMenu}>\r\n                      <div variant=\"contained\" className={classes.ButtonGroup}>\r\n\r\n                          <EditeModal backHandler={backHandler} />\r\n\r\n                      </div>\r\n\r\n                    \r\n                    <Button className={clsx({\r\n                                [classes.DisplayNone]: StartStatus\r\n                    })} disabled={false}  color=\"primary\" variant=\"outlined\"  onClick={ startHandler }>برو بریم</Button>\r\n                </div>\r\n               \r\n                  <div>\r\n                  {QuestionFilter(CurrentQuestion)}\r\n                  </div>\r\n                  <div className={classes.Footer}>                  \r\n                        <Button className={classes.BackButton}  variant=\"outlined\" onClick={ backHandler }>\r\n                              <ArrowForwardIcon />\r\n                        </Button>\r\n                        <Button className={classes.NextButton} color=\"primary\" variant=\"contained\" onClick={ nextHandler } disabled={!Validate.RequireValidate}>\r\n                              <ArrowBackIcon />\r\n                        </Button>\r\n                    </div>\r\n              <CustomModal \r\n                  {...ModalMessage}\r\n                  ModalhandleClose={ModalhandleClose} \r\n                  ModalStatus={ModalStatus} \r\n                  modalSubmitHandler={modalSubmitHandler}\r\n                  ModalCancel={ModalCancel} />\r\n      </div>\r\n  );\r\n}","import React from \"react\";\r\nimport {useDispatch} from 'react-redux';\r\nimport * as actionTypes from '../../Redux/Actions/actionTypes';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\n\r\nconst SettingPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const ThemeHandler = (theme) => {\r\n        if (theme === \"theme001\") {\r\n            dispatch({type:actionTypes.SET_THEME , payload: \"theme001\"})\r\n        } else if (theme === \"theme002\") {\r\n            dispatch({type:actionTypes.SET_THEME , payload: \"theme002\"})\r\n        } else if (theme === \"theme003\") {\r\n            dispatch({type:actionTypes.SET_THEME , payload: \"theme003\"})\r\n        } else if (theme === \"theme004\") {\r\n            dispatch({type:actionTypes.SET_THEME , payload: \"theme004\"})\r\n        }else if (theme === \"theme005\") {\r\n            dispatch({type:actionTypes.SET_THEME , payload: \"theme005\"})\r\n        }else if (theme === \"theme006\") {\r\n            dispatch({type:actionTypes.SET_THEME , payload: \"theme006\"})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n            <Button  onClick={() => ThemeHandler(\"theme001\")}>تم شماره 1</Button>\r\n            <Button  onClick={() => ThemeHandler(\"theme002\")}>تم شماره 2</Button>\r\n            <Button  onClick={() => ThemeHandler(\"theme003\")}>تم شماره 3</Button>\r\n            <Button  onClick={() => ThemeHandler(\"theme004\")}>تم شماره 4</Button>\r\n            <Button  onClick={() => ThemeHandler(\"theme005\")}>تم شماره 5</Button>\r\n            <Button  onClick={() => ThemeHandler(\"theme006\")}>تم شماره 6</Button>\r\n            </ButtonGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettingPage;","import './App.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route , Switch , withRouter } from 'react-router-dom';\r\nimport Drawer from './Components/Drawer/Drawer.js';\r\nimport DashboardPage from './Pages/Dashboard/DashboardPage';\r\nimport CallPage from './Pages/CallPage/CallPage';\r\nimport SettingPage from './Pages/SettingPage/SettingPage';\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\n\r\n\r\nfunction App() {\r\n  // GET CUSTOM THEME FROM THEME_REDUCER REDUX\r\n  let {customTheme} = useSelector(state => state.theme)\r\n  \r\n  let routes =  (\r\n    <Switch>\r\n      <Route exact path=\"/dashboard\"  component={DashboardPage} />\r\n      <Route exact path=\"/call\"  component={CallPage} />\r\n      <Route exact path=\"/setting\"  component={SettingPage} />\r\n      <Route path=\"/\"  component={DashboardPage} />\r\n    </Switch>\r\n  )\r\n\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        {/* GLOBAL THEME PROVED IN ALL NESTED COMPONENT IN PROJECT */}\r\n        <ThemeProvider theme={customTheme}>\r\n          <Drawer >\r\n            {routes}\r\n          </Drawer>\r\n        </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actionTypes from '../Actions/actionTypes';\r\n\r\nconst initialState = {\r\n    user: \"Reza\"\r\n}\r\n\r\nexport const authReducer = (state = initialState , action) => {\r\n    switch(action.type) {\r\n        case(actionTypes.SET_USER): \r\n        return {\r\n            ...state ,\r\n            user: action.payload\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/IRANSans.a5c96d77.woff2\";","import {pink } from '@material-ui/core/colors';\r\nimport {createTheme} from '@material-ui/core/styles';\r\nimport IranSansFont from \"../../fonts/assets/IRANSans.woff2\"\r\n\r\n\r\nconst Iransans = {\r\n  fontFamily: 'iransans',\r\n  fontStyle: 'normal',\r\n  fontWeight: 400,\r\n  src: ` url(${IranSansFont}) format('woff2')  `,\r\n};\r\n\r\n\r\nexport const theme001 = createTheme({\r\n\r\n\r\n  palette: {\r\n    background: {\r\n      default: pink[30]\r\n    } , \r\n      green: {\r\n        // header color\r\n        main: pink[800] \r\n      } ,\r\n      grey: {\r\n        // side menu color\r\n        main:\"#131628\" ,\r\n        // complementary color for theme using in question such as multicheckbox and radio\r\n        dark: pink[100]\r\n      } ,\r\n      success: {\r\n        // using in question number and drag&drop question\r\n        main: pink[900] ,\r\n        // hover effect on profile Icon color\r\n        dark: \"#980436\" , \r\n        // BackgroundColor for submenu\r\n        light: \"#2F3249\"\r\n      } , \r\n      warning: {\r\n        // Gradiant for SubHeader\r\n        main: pink[700] ,\r\n        // hover color on sidebar menu\r\n        dark: \"#AA1C4E\" ,\r\n      // selected item form sidemenu color\r\n      light: \"#ab003c\"\r\n      } \r\n\r\n    } ,\r\n    direction: 'rtl',\r\n    typography: {\r\n      fontFamily: 'iransans, Arial',\r\n    },\r\n    overrides: {\r\n      MuiCssBaseline: {\r\n        '@global': {  \r\n          '@font-face': [Iransans],\r\n          \r\n        },\r\n      },\r\n\r\n      MuiRadio: {\r\n        colorSecondary: {\r\n          '&$checked': {\r\n            color: \"#ab003c\",\r\n          },\r\n        },\r\n      },\r\n      \r\n      MuiCheckbox: {\r\n        colorSecondary: {\r\n          \"&$checked\": {\r\n            color: \"#ab003c\"\r\n          }\r\n        }\r\n      } ,\r\n\r\n      MuiFormControl: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    },\r\n\r\n  });","import { grey, red } from '@material-ui/core/colors';\r\nimport {createTheme} from '@material-ui/core/styles';\r\nimport IranSansFont from \"../../fonts/assets/IRANSans.woff2\"\r\n\r\n const IranSans = {\r\n  fontFamily: 'iransans',\r\n  fontStyle: 'normal',\r\n  fontWeight: 400,\r\n  src: ` url(${IranSansFont}) format('woff')  `,\r\n};\r\n\r\n\r\nexport const theme002 = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: red[50]\r\n    } , \r\n    // header color\r\n    green: {\r\n      main: grey[900]\r\n    } ,\r\n    // side menu color\r\n    grey: {\r\n      main: \"#190000\" , \r\n    // complementary color for theme using in question\r\n      dark: red[100]\r\n    } ,\r\n    // using in question number\r\n    success: {\r\n      main: red[900],\r\n      // hover effect on profile Icon color\r\n      dark: \"#302222\" , \r\n      // BackgroundColor for submenu\r\n      light: \"#333333\"\r\n    } , \r\n    warning: {\r\n      // Gradiant for SubHeader\r\n      main: grey[800] ,\r\n      // hover color on sidebar menu\r\n      dark: \"#BE4147\" , \r\n      // selected item form sidemenu color\r\n      light: \"#9B0007\"\r\n    }\r\n    // secondary: {\r\n    //   main: purple[500] \r\n    // } , \r\n    // primary: {\r\n    //     main: red[500]\r\n    // }   ,\r\n    // success: {\r\n    //   main: \"#ab003c\"\r\n    // } , \r\n\r\n  } ,\r\n    direction: 'rtl',\r\n    typography: {\r\n      fontFamily: 'iransans, Arial',\r\n    },\r\n    overrides: {\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          '@font-face': [IranSans],\r\n        },\r\n      },\r\n\r\n      MuiRadio: {\r\n        colorSecondary: {\r\n          '&$checked': {\r\n            color: red[800],\r\n          },\r\n        },\r\n      },\r\n\r\n            \r\n      MuiCheckbox: {\r\n        colorSecondary: {\r\n          \"&$checked\": {\r\n            color: red[900]\r\n          }\r\n        }\r\n      } ,\r\n\r\n      MuiFormControl: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n      \r\n    },\r\n\r\n\r\n  });","import { blue, cyan } from '@material-ui/core/colors';\r\nimport {createTheme} from '@material-ui/core/styles';\r\nimport IranSansFont from \"../../fonts/assets/IRANSans.woff2\"\r\n\r\n\r\n const Iransans = {\r\n  fontFamily: 'iransans',\r\n  fontStyle: 'normal',\r\n  fontWeight: 400,\r\n  src: ` url(${IranSansFont}) format('woff2')  `,\r\n};\r\n\r\n\r\nexport const theme003 = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: cyan[50]\r\n    } , \r\n    green: {\r\n      // header color\r\n      main: blue[800]\r\n    } ,\r\n    grey: {\r\n      // side menu color\r\n      main: \"#030421\", \r\n      // complementary color for theme using in question\r\n        dark: blue[100]\r\n    } ,\r\n    success: {\r\n      // using in question number\r\n        main: blue[900] ,\r\n        // hover effect on profile Icon color\r\n        dark: \"#1A234F\" ,\r\n        // BackgroundColor for submenu\r\n        light: \"#2F3249\"\r\n    } , \r\n    warning: {\r\n      // Gradiant for SubHeader\r\n        main: blue[700],\r\n        // hover color on sidebar menu\r\n        dark: \"#444674\" ,\r\n      // selected item form sidemenu color\r\n        light: \"#1261A0\"\r\n    }\r\n    // secondary: {\r\n    //   main: purple[500] \r\n    // } , \r\n    // primary: {\r\n    //     main: red[500]\r\n    // }   ,\r\n    // success: {\r\n    //   main: \"#ab003c\"\r\n    // } , \r\n\r\n  } ,\r\n    direction: 'rtl',\r\n    typography: {\r\n      fontFamily: 'iransans, Arial',\r\n    },\r\n    overrides: {\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          '@font-face': [Iransans],\r\n        },\r\n      },\r\n      MuiRadio: {\r\n        colorSecondary: {\r\n          '&$checked': {\r\n            color: \"#1261A0\",\r\n          },\r\n        },\r\n      },\r\n\r\n                  \r\n      MuiCheckbox: {\r\n        colorSecondary: {\r\n          \"&$checked\": {\r\n            color: '#1261A0'\r\n          }\r\n        }\r\n      } ,\r\n\r\n      MuiFormControl: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    },\r\n\r\n  });","import { green } from '@material-ui/core/colors';\r\nimport {createTheme} from '@material-ui/core/styles';\r\nimport IranSansFont from \"../../fonts/assets/IRANSans.woff2\"\r\n\r\n\r\n\r\nconst Iransans = {\r\n  fontFamily: 'iransans',\r\n  fontStyle: 'normal',\r\n  fontWeight: 400,\r\n  src: ` url(${IranSansFont}) format('woff2')  `,\r\n};\r\n\r\n\r\nexport const theme004 = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#ECF8E2\"\r\n    } , \r\n      green: {\r\n        // header color\r\n        // main:\"#1E5631\"\r\n        main: green[700]\r\n        // main: red[900]\r\n      } ,\r\n      grey: {\r\n        // side menu color\r\n        main:\"#1B291B\", \r\n        // complementary color for theme using in question\r\n          dark: green[100]\r\n      } ,\r\n      success: {\r\n        // using in question number \r\n        // main: \"#ECF8E2\",\r\n        main: green[900],\r\n        // hover effect on profile Icon color\r\n        dark: \"#10A175\" , \r\n        // BackgroundColor for submenu\r\n        light: \"#324232\"\r\n      } , \r\n      warning: {\r\n        main: green[600],\r\n        // hover color on sidebar menu\r\n        dark: \"#8B9A96\" ,\r\n      // selected item form sidemenu color\r\n        light: \"#038764\"\r\n      }\r\n      // secondary: {\r\n      //   main: purple[500] \r\n      // } , \r\n      // primary: {\r\n      //     main: red[500]\r\n      // }   ,\r\n      // success: {\r\n      //   main: \"#ab003c\"\r\n      // } , \r\n\r\n    } ,\r\n    direction: 'rtl',\r\n    typography: {\r\n      fontFamily: 'iransans, Arial',\r\n    },\r\n    overrides: {\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          '@font-face': [Iransans],\r\n        },\r\n      },\r\n      MuiRadio: {\r\n        colorSecondary: {\r\n          '&$checked': {\r\n            color: \"#1E5631\",\r\n          },\r\n        },\r\n      },\r\n\r\n      MuiCheckbox: {\r\n        colorSecondary: {\r\n          \"&$checked\": {\r\n            color: \"#1E5631\"\r\n          }\r\n        }\r\n      } ,\r\n\r\n      MuiFormControl: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n  });","import { purple } from '@material-ui/core/colors';\r\nimport {createTheme} from '@material-ui/core/styles';\r\nimport IranSansFont from \"../../fonts/assets/IRANSans.woff2\";\r\n\r\n\r\n\r\n\r\nconst Iransans = {\r\n  fontFamily: 'iransans',\r\n  fontStyle: 'normal',\r\n  fontWeight: 400,\r\n  src: ` url(${IranSansFont}) format('woff2')  `,\r\n};\r\n\r\n\r\nexport const theme005 = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: purple[30]\r\n    } , \r\n    \r\n      green: {\r\n        // header color\r\n        main: purple[900] \r\n      } ,\r\n      grey: {\r\n        // side menu color\r\n        main:\"#120632\", \r\n        // complementary color for theme using in question\r\n          dark: purple[100]\r\n      } ,\r\n      success: {\r\n        // using in question number\r\n        main: purple[900] ,\r\n        // hover effect on profile Icon color\r\n        dark: \"#980436\" , \r\n        // BackgroundColor for submenu\r\n        light: \"#2E165B\"\r\n      } , \r\n      warning: {\r\n        // Gradiant for SubHeader\r\n        main: purple[800] ,\r\n        // hover color on sidebar menu\r\n        dark: \"#532D84\" ,\r\n      // selected item form sidemenu color\r\n        light: \"#8F329D\"\r\n      } \r\n\r\n    } ,\r\n    direction: 'rtl',\r\n    typography: {\r\n      fontFamily: 'iransans, Arial',\r\n    },\r\n    overrides: {\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          '@font-face': [Iransans],\r\n        },\r\n      },\r\n      MuiRadio: {\r\n        colorSecondary: {\r\n          '&$checked': {\r\n            color: \"#2E165B\",\r\n          },\r\n        },\r\n      },\r\n\r\n                        \r\n      MuiCheckbox: {\r\n        colorSecondary: {\r\n          \"&$checked\": {\r\n            color: purple[800]\r\n          }\r\n        }\r\n      } ,\r\n\r\n      MuiFormControl: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    },\r\n  });","import {yellow } from '@material-ui/core/colors';\r\nimport {createTheme} from '@material-ui/core/styles';\r\nimport IranSansFont from \"../../fonts/assets/IRANSans.woff2\";\r\n\r\n\r\n\r\n\r\nconst Iransans = {\r\n  fontFamily: 'iransans',\r\n  fontStyle: 'normal',\r\n  fontWeight: 400,\r\n  src: ` url(${IranSansFont}) format('woff2')  `,\r\n};\r\n\r\n\r\nexport const theme006 = createTheme({\r\n    palette: {\r\n      background: {\r\n        default: \"#ECE1D0\"\r\n      } , \r\n      \r\n      green: {\r\n        // header color\r\n        main:\"#b79906\" \r\n      } ,\r\n      grey: {\r\n        // side menu color\r\n        main:\"#120B01\", \r\n        // complementary color for theme using in question\r\n          dark: yellow[100]\r\n      } ,\r\n      success: {\r\n        // using in quesiton number\r\n        main: yellow[900] ,\r\n        // hover effect on profile Icon color\r\n        dark: \"#980436\" , \r\n        // BackgroundColor for submenu\r\n        light: \"#2F3249\"\r\n      } , \r\n      warning: {\r\n        // Gradiant for SubHeader\r\n        main: \"#b79906\" ,\r\n        // hover color on sidebar menu\r\n        dark: \"#B49311\" ,\r\n      // selected item form sidemenu color\r\n        light: \"#CE5501\"\r\n      } \r\n\r\n    } ,\r\n    direction: 'rtl',\r\n    typography: {\r\n      fontFamily: 'iransans, Arial',\r\n    },\r\n    overrides: {\r\n      MuiCssBaseline: {\r\n        '@global': {\r\n          '@font-face': [Iransans],\r\n        },\r\n      },\r\n      MuiRadio: {\r\n        colorSecondary: {\r\n          '&$checked': {\r\n            color: \"#b79906\",\r\n          },\r\n        },\r\n      },\r\n                        \r\n      MuiCheckbox: {\r\n        colorSecondary: {\r\n          \"&$checked\": {\r\n            color: yellow[800]\r\n          }\r\n        }\r\n      } ,\r\n\r\n      MuiFormControl: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    },\r\n  });","import * as actionTypes from '../Actions/actionTypes';\r\nimport {theme001} from '../../Theme/CustomTheme/Theme001';\r\nimport {theme002} from '../../Theme/CustomTheme/Theme002';\r\nimport {theme003} from '../../Theme/CustomTheme/Theme003';\r\nimport {theme004} from '../../Theme/CustomTheme/Theme004';\r\nimport {theme005} from '../../Theme/CustomTheme/Theme005';\r\nimport {theme006} from '../../Theme/CustomTheme/Theme006';\r\n\r\nconst initialState = { \r\n    customTheme : {\r\n        ...theme004\r\n    }\r\n}\r\n\r\nconst themeReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case (actionTypes.SET_THEME): \r\n        if (action.payload === \"theme001\") {\r\n            return {\r\n                customTheme: {\r\n                    ...theme001\r\n                }\r\n            }\r\n        } else if (action.payload === \"theme002\")  {\r\n            return  {\r\n                customTheme: {\r\n                    ...theme002\r\n                }\r\n            }   \r\n        } else if (action.payload === \"theme003\")  {\r\n            return  {\r\n                customTheme: {\r\n                    ...theme003\r\n                }\r\n            }   \r\n        } else if (action.payload === \"theme004\")  {\r\n            return  {\r\n                customTheme: {\r\n                    ...theme004\r\n                }\r\n            }   \r\n        }else if (action.payload === \"theme005\")  {\r\n            return  {\r\n                customTheme: {\r\n                    ...theme005\r\n                }\r\n            }   \r\n        }else if (action.payload === \"theme006\")  {\r\n            return  {\r\n                customTheme: {\r\n                    ...theme006\r\n                }\r\n            }   \r\n        }\r\n        break\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default themeReducer;","\r\n\r\nconst initialState = {\r\n    reRender: \"hello\"\r\n}\r\n\r\nexport const apexReducer = (state = initialState , action) => {\r\n    switch(action.type) {\r\n        case(\"rerender\"): \r\n        return {\r\n            reRender: \"goodby\"\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default apexReducer;\r\n","import * as actionTypes from '../Actions/actionTypes';\r\nimport { ReplaceCurrentQuestionInData } from '../../functions/handleData';\r\nimport { checkConditionOfChoices } from '../../functions/handleData';\r\n\r\nconst initialState = {\r\n    Data : [\r\n        {\r\n            id: 88 ,\r\n            number: 1 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 12 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                column: 3 ,\r\n                values:[\r\n                {id: 100 , caption: \"سوال شماره 3 حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"90\" , status: false  , display: true} ,\r\n                  {id: 102 , caption: \"2\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"3\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"4\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: -1 , caption: \"5\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 89 ,\r\n            number: 2 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 25 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                max: 10 ,\r\n                min: 5 ,\r\n                childValues:[\r\n                    {id: 100 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true  , parentId: 100} ,\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true , parentId: 100} ,\r\n                  {id: 103 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true , parentId: 100} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true , parentId: 100} ,\r\n                  {id: -1 , caption: \"هیچکدام\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true , parentId: 102} ,\r\n                    ]\r\n                 ,\r\n                 parentValues: [\r\n                    {id: 100 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                    {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                    {id: 103 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    {id: -1 , caption: \"هیچکدام\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                 ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 90 ,\r\n            number: 3 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 24 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                max: 10 ,\r\n                min: 5 ,\r\n                values:[\r\n                    {id: 100 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: -1 , caption: \"هیچکدام\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 91 ,\r\n            number: 4 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 23 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                max: 10 ,\r\n                min: 5 ,\r\n                values:[\r\n                {id: 100 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: -1 , caption: \"هیچکدام\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 92 ,\r\n            number: 5 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 22 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                max: 10 ,\r\n                min: 5 ,\r\n                values:[\r\n                    {id: 100 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: -1 , caption: \"هیچکدام\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 93 ,\r\n            number: 6 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 21 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                max: 10 ,\r\n                min: 5 ,\r\n                values:[\r\n                    {id: 100 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  {id: 105 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 94 ,\r\n            number: 7 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 20 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                max: 10 ,\r\n                min: 5 ,\r\n                values:[\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"45\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 95 ,\r\n            number: 8 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 19 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                other: true ,\r\n                column: 4 ,\r\n                values:[\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"45\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 96 ,\r\n            number: 9 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"توضیحی برای سوال\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 18 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                other: true ,\r\n                column: 4 ,\r\n                values:[\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"45\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n            id: 97 ,\r\n            number: 10 ,\r\n            caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n            description: \"توضیحی برای سوال\" ,\r\n            mandatory: true , \r\n            choiceTypeId: 17 , \r\n            sortOrder: 1 ,\r\n            answered: false ,\r\n            display: true ,\r\n            noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n            choices:{\r\n                description: \"\" ,\r\n                other: true ,\r\n                column: 4 ,\r\n                values:[\r\n                  {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"45\" , status: false  , display: true} ,\r\n                  {id: 103 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                  {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                    ]\r\n              }\r\n     \r\n        } ,\r\n        {\r\n          id: 500 ,\r\n          number: 1 ,\r\n          caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n          description: \"\" ,\r\n          mandatory: true , \r\n          choiceTypeId: 26 , \r\n          sortOrder: 1 ,\r\n          answered: false ,\r\n          display: true ,\r\n          noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n          choices:{\r\n              description: \"\" ,\r\n              column: 4 ,\r\n              values:[\r\n              {id: 100 , caption: \"1\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n                {id: 102 , caption: \"2\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"23\" , status: false  , display: true} ,\r\n                {id: 103 , caption: \"3\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                {id: 104 , caption: \"4\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                {id: -1 , caption: \"5\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n                  ]\r\n            }\r\n   \r\n      } ,\r\n    {\r\n       id: 30 ,\r\n       number: 12 ,\r\n       caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n       description: \"توضیحی برای سوال\" ,\r\n       mandatory: true , \r\n       choiceTypeId: 16 , \r\n       sortOrder: 1 ,\r\n       answered: false ,\r\n       display: true ,\r\n       noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n       choices:{\r\n           description: \"\" ,\r\n           column: null ,\r\n           max: 1400 , \r\n           min: 5 ,\r\n           values:null\r\n         }\r\n\r\n   } ,\r\n    {\r\n       id: 400 ,\r\n       number: 13 ,\r\n       caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n       description: \"توضیحی برای سوال\" ,\r\n       mandatory: true , \r\n       choiceTypeId: 15 , \r\n       sortOrder: 1 ,\r\n       answered: false ,\r\n       display: true ,\r\n       noidea: {id: -1 , caption: \"سوشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"457\" , status: false  , display: true} ,\r\n       choices:{\r\n           description: \"\" ,\r\n           other: true ,\r\n           column: 4 ,\r\n           values:[\r\n             {id: 102 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"45\" , status: false  , display: true} ,\r\n             {id: 103 , caption: \"میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"452\" , status: false  , display: true} ,\r\n             {id: 104 , caption: \"سیشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"453\" , status: false  , display: true} ,\r\n               ]\r\n         }\r\n\r\n   } ,\r\n\r\n   {\r\n   id: 45 ,\r\n   number: 14 ,\r\n   caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n   description: \"توضیحی برای سوال\" ,\r\n   mandatory: true , \r\n   choiceTypeId: 13 , \r\n   sortOrder: 2 ,\r\n   answered: false ,\r\n   display: true ,\r\n   noidea:  {id: 1 , caption: \"2\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67,19,18\" , status: false  , display: true } ,\r\n   choices:{\r\n       description: \"\" ,\r\n       other: true ,\r\n       column: 4 ,\r\n       values:[\r\n           {id: 1 , caption: \"2\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67,19,18\" , status: false  , display: true } ,\r\n           {id: 34 , caption: \"ایساکو\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67\" , status: false  , display: true} ,\r\n           {id: 56 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"60\" , status: false  , display: true} ,\r\n        //    {id: 5 , choice: \"ایfdgfdساکو\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67\" , status: false  , display: true} ,\r\n        //    {id: 12 , choice: \"ایساکو\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67\" , status: false  , display: true} ,\r\n        //    {id: 11 , choice: \"ایساکو\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67\" , status: false  , display: true} ,\r\n\r\n           ]\r\n       }\r\n\r\n   } \r\n   ,\r\n\r\n   {\r\n   id: 60 ,\r\n   number: 15 ,\r\n   caption: \"گزینه مورد نظر خود را وارد کنید؟\" ,\r\n   description: \"\" ,\r\n   mandatory: true , \r\n   choiceTypeId: 14 , \r\n   sortOrder: 3 ,\r\n   answered: false ,\r\n   display: true ,\r\n   noidea:  {id: 1 , caption: \"2\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67,19,18\" , status: false  , display: true } ,\r\n   choices:{\r\n       description: \"\" ,\r\n       column: null ,\r\n       values: [\r\n           \r\n        {id: 1 , caption: \"2\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67,19,18\" , status: false  , display: true } ,\r\n        {id: 34 , caption: \"ایساکو\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"67\" , status: false  , display: true} ,\r\n        {id: 56 , caption: \"سوال بعدی حذف میشود\" , sortOrder: 12 , deletedChoiceId: \"45,12,14\" , deletedQuestionId: \"60\" , status: false  , display: true} ,\r\n       ]\r\n       }\r\n\r\n   }\r\n   \r\n]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const QuestionReducer = (state = initialState , action) => {\r\n    switch(action.type) {\r\n\r\n        case(actionTypes.SUBMIT_ANSWER): \r\n            let updateData = JSON.parse(JSON.stringify(state))\r\n            checkConditionOfChoices( action.payload, updateData.Data)\r\n            ReplaceCurrentQuestionInData(action.payload , updateData.Data)\r\n            return {\r\n                Data: updateData.Data\r\n            }\r\n\r\n\r\n        default: return state\r\n    }\r\n}\r\n","import * as actionTypes from '../Actions/actionTypes';\r\nimport { ReturnQuestionTurn } from '../../functions/handleData';\r\nimport { OneStepBackFromCurrentQuestion } from '../../functions/handleData';\r\n\r\n\r\n\r\nconst initialState = {\r\n    CurrentQuestion : null , \r\n    CurrentQuestionChange: true , \r\n}\r\n\r\nexport const CurrentQuestionReducer = (state = initialState , action) => {\r\n   switch(action.type) {\r\n       case(actionTypes.NEXT_QUESTION):\r\n        let result = ReturnQuestionTurn(action.payload)\r\n        let newresult = JSON.parse(JSON.stringify(result))\r\n       return {\r\n        CurrentQuestion : {\r\n            ...newresult\r\n        } , \r\n        CurrentQuestionChange: false , \r\n       }\r\n\r\n       case(actionTypes.BACK_QUESTION):\r\n       var updateCurrentQuestion = OneStepBackFromCurrentQuestion(state.CurrentQuestion , action.Data);\r\n       return {\r\n        CurrentQuestion : {\r\n            ...updateCurrentQuestion\r\n        } ,\r\n        CurrentQuestionChange: false , \r\n       }\r\n\r\n       case(actionTypes.UPDATE_CURRENT_QUESTION):\r\n       return {\r\n        CurrentQuestion: {...action.payload} , \r\n        CurrentQuestionChange: true , \r\n       }\r\n\r\n       case(actionTypes.SET_CHANGE_CURRENT_QUESTION): {\r\n           return {\r\n               CurrentQuestion: {...state.CurrentQuestion} ,\r\n               CurrentQuestionChange: action.payload , \r\n           }\r\n       }\r\n\r\n       default: return state\r\n   }\r\n}","import * as actionTypes from '../Actions/actionTypes';\r\nimport { IsCurrentQuestionHaveAnswerd } from '../../functions/handleData';\r\n\r\n\r\n\r\nconst initialState = {\r\n    Validate : {\r\n        RequireValidate: false , \r\n\r\n    }\r\n}\r\n\r\nexport const ValidatorReducer = (state = initialState , action) => {\r\n   switch(action.type) {\r\n       case(actionTypes.CHECK_FOR_REQUIRE_VALIDATE):\r\n        let updateRequireValidate = IsCurrentQuestionHaveAnswerd(action.CurrentQuestion);\r\n            return {\r\n                Validate: {\r\n                    ...state.Validate ,\r\n                    RequireValidate: updateRequireValidate\r\n                }\r\n            }\r\n\r\n        case(actionTypes.SET_REQUIRE_VALIDATE): \r\n    \r\n            return {\r\n                Validate: {\r\n                    ...state.Validate , \r\n                    RequireValidate: action.payload\r\n                }\r\n            }\r\n            default: return state\r\n       }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport rtl from 'jss-rtl';\r\nimport { create } from 'jss';\r\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {createStore , applyMiddleware , compose , combineReducers} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {authReducer} from \"./Redux/Reducers/authReducer\";\r\nimport themeReducer from \"./Redux/Reducers/ThemeReducer\";\r\nimport apexReducer from './Redux/Reducers/apexReducer';\r\nimport { QuestionReducer } from './Redux/Reducers/QuestionReducer';\r\nimport { CurrentQuestionReducer } from './Redux/Reducers/CurrentQuestionReducer';\r\nimport { ValidatorReducer } from './Redux/Reducers/ValidatorReducer';\r\n\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer , \r\n  theme: themeReducer ,\r\n  apex: apexReducer ,\r\n  qa: QuestionReducer ,\r\n  currentqa: CurrentQuestionReducer , \r\n  validate: ValidatorReducer\r\n\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.Fragment>\r\n    <BrowserRouter>\r\n        <CssBaseline />\r\n        <StylesProvider jss={jss}>\r\n        <App />\r\n      </StylesProvider>\r\n    </BrowserRouter>\r\n  </React.Fragment>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}